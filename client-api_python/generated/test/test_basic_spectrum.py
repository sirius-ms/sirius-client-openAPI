# coding: utf-8

"""
    SIRIUS Nightsky API

    REST API that provides the full functionality of SIRIUS and its web services as background service. It is intended as entry-point for scripting languages and software integration SDKs.This API is exposed by SIRIUS 6

    The version of the OpenAPI document: 2.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from PySirius.models.basic_spectrum import BasicSpectrum

class TestBasicSpectrum(unittest.TestCase):
    """BasicSpectrum unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BasicSpectrum:
        """Test BasicSpectrum
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BasicSpectrum`
        """
        model = BasicSpectrum()
        if include_optional:
            return BasicSpectrum(
                name = '',
                ms_level = 56,
                collision_energy = '',
                precursor_mz = 1.337,
                scan_number = 56,
                peaks = [
                    PySirius.models.simple_peak.SimplePeak(
                        mz = 1.337, 
                        intensity = 1.337, )
                    ],
                abs_intensity_factor = 1.337
            )
        else:
            return BasicSpectrum(
                peaks = [
                    PySirius.models.simple_peak.SimplePeak(
                        mz = 1.337, 
                        intensity = 1.337, )
                    ],
        )
        """

    def testBasicSpectrum(self):
        """Test BasicSpectrum"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
