# coding: utf-8

"""
    SIRIUS Nightsky API

    REST API that provides the full functionality of SIRIUS and its web services as background service. It is intended as entry-point for scripting languages and software integration SDKs.This API is exposed by SIRIUS 6

    The version of the OpenAPI document: 2.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from PySirius.models.compound_import import CompoundImport

class TestCompoundImport(unittest.TestCase):
    """CompoundImport unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CompoundImport:
        """Test CompoundImport
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CompoundImport`
        """
        model = CompoundImport()
        if include_optional:
            return CompoundImport(
                name = '',
                features = [
                    PySirius.models.feature_import.FeatureImport(
                        name = '', 
                        external_feature_id = '', 
                        ion_mass = 1.337, 
                        charge = 56, 
                        detected_adducts = [
                            ''
                            ], 
                        rt_start_seconds = 1.337, 
                        rt_end_seconds = 1.337, 
                        merged_ms1 = PySirius.models.basic_spectrum.BasicSpectrum(
                            name = '', 
                            ms_level = 56, 
                            collision_energy = '', 
                            precursor_mz = 1.337, 
                            scan_number = 56, 
                            peaks = [
                                PySirius.models.simple_peak.SimplePeak(
                                    mz = 1.337, 
                                    intensity = 1.337, )
                                ], 
                            abs_intensity_factor = 1.337, ), 
                        ms1_spectra = [
                            PySirius.models.basic_spectrum.BasicSpectrum(
                                name = '', 
                                ms_level = 56, 
                                collision_energy = '', 
                                precursor_mz = 1.337, 
                                scan_number = 56, 
                                peaks = [
                                    PySirius.models.simple_peak.SimplePeak(
                                        mz = 1.337, 
                                        intensity = 1.337, )
                                    ], 
                                abs_intensity_factor = 1.337, )
                            ], 
                        ms2_spectra = [
                            
                            ], )
                    ]
            )
        else:
            return CompoundImport(
                features = [
                    PySirius.models.feature_import.FeatureImport(
                        name = '', 
                        external_feature_id = '', 
                        ion_mass = 1.337, 
                        charge = 56, 
                        detected_adducts = [
                            ''
                            ], 
                        rt_start_seconds = 1.337, 
                        rt_end_seconds = 1.337, 
                        merged_ms1 = PySirius.models.basic_spectrum.BasicSpectrum(
                            name = '', 
                            ms_level = 56, 
                            collision_energy = '', 
                            precursor_mz = 1.337, 
                            scan_number = 56, 
                            peaks = [
                                PySirius.models.simple_peak.SimplePeak(
                                    mz = 1.337, 
                                    intensity = 1.337, )
                                ], 
                            abs_intensity_factor = 1.337, ), 
                        ms1_spectra = [
                            PySirius.models.basic_spectrum.BasicSpectrum(
                                name = '', 
                                ms_level = 56, 
                                collision_energy = '', 
                                precursor_mz = 1.337, 
                                scan_number = 56, 
                                peaks = [
                                    PySirius.models.simple_peak.SimplePeak(
                                        mz = 1.337, 
                                        intensity = 1.337, )
                                    ], 
                                abs_intensity_factor = 1.337, )
                            ], 
                        ms2_spectra = [
                            
                            ], )
                    ],
        )
        """

    def testCompoundImport(self):
        """Test CompoundImport"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
