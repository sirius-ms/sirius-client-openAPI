# coding: utf-8

"""
    SIRIUS Nightsky API

    REST API that provides the full functionality of SIRIUS and its web services as background service. It is intended as entry-point for scripting languages and software integration SDKs.This API is exposed by SIRIUS 6

    The version of the OpenAPI document: 2.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from PySirius.models.searchable_database import SearchableDatabase

class TestSearchableDatabase(unittest.TestCase):
    """SearchableDatabase unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SearchableDatabase:
        """Test SearchableDatabase
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SearchableDatabase`
        """
        model = SearchableDatabase()
        if include_optional:
            return SearchableDatabase(
                display_name = '',
                location = '',
                match_rt_of_reference_spectra = True,
                database_id = '',
                custom_db = True,
                searchable = True,
                db_date = '',
                db_version = 56,
                update_needed = True,
                number_of_structures = 56,
                number_of_formulas = 56,
                number_of_reference_spectra = 56
            )
        else:
            return SearchableDatabase(
                database_id = '',
                custom_db = True,
                searchable = True,
                update_needed = True,
        )
        """

    def testSearchableDatabase(self):
        """Test SearchableDatabase"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
