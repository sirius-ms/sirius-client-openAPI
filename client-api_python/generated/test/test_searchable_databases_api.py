# coding: utf-8

"""
    SIRIUS Nightsky API

    REST API that provides the full functionality of SIRIUS and its web services as background service. It is intended as entry-point for scripting languages and software integration SDKs.This API is exposed by SIRIUS 6.0.0

    The version of the OpenAPI document: 2.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from PySirius.api.searchable_databases_api import SearchableDatabasesApi


class TestSearchableDatabasesApi(unittest.TestCase):
    """SearchableDatabasesApi unit test stubs"""

    def setUp(self) -> None:
        self.api = SearchableDatabasesApi()

    def tearDown(self) -> None:
        pass

    def test_add_databases(self) -> None:
        """Test case for add_databases

        """
        pass

    def test_create_database(self) -> None:
        """Test case for create_database

        """
        pass

    def test_get_custom_databases(self) -> None:
        """Test case for get_custom_databases

        """
        pass

    def test_get_database(self) -> None:
        """Test case for get_database

        """
        pass

    def test_get_databases(self) -> None:
        """Test case for get_databases

        """
        pass

    def test_get_included_databases(self) -> None:
        """Test case for get_included_databases

        """
        pass

    def test_import_into_database(self) -> None:
        """Test case for import_into_database

        Start import of structure and spectra files into the specified database.
        """
        pass

    def test_import_into_database_as_job(self) -> None:
        """Test case for import_into_database_as_job

        Start import of structure and spectra files into the specified database.
        """
        pass

    def test_remove_database(self) -> None:
        """Test case for remove_database

        """
        pass

    def test_update_database(self) -> None:
        """Test case for update_database

        """
        pass


if __name__ == '__main__':
    unittest.main()
