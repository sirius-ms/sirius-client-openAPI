# coding: utf-8

"""
    SIRIUS Nightsky API

    REST API that provides the full functionality of SIRIUS and its web services as background service. It is intended as entry-point for scripting languages and software integration SDKs.This API is exposed by SIRIUS 6

    The version of the OpenAPI document: 2.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from PySirius.models.zodiac import Zodiac

class TestZodiac(unittest.TestCase):
    """Zodiac unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Zodiac:
        """Test Zodiac
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Zodiac`
        """
        model = Zodiac()
        if include_optional:
            return Zodiac(
                enabled = True,
                considered_candidates_at300_mz = 56,
                considered_candidates_at800_mz = 56,
                run_in_two_steps = True,
                edge_filter_thresholds = PySirius.models.zodiac_edge_filter_thresholds.ZodiacEdgeFilterThresholds(
                    threshold_filter = 1.337, 
                    min_local_candidates = 56, 
                    min_local_connections = 56, ),
                gibbs_sampler_parameters = PySirius.models.zodiac_epochs.ZodiacEpochs(
                    iterations = 56, 
                    burn_in_period = 56, 
                    number_of_markov_chains = 56, )
            )
        else:
            return Zodiac(
        )
        """

    def testZodiac(self):
        """Test Zodiac"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
