% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/account_credentials.R
\docType{class}
\name{AccountCredentials}
\alias{AccountCredentials}
\title{AccountCredentials}
\format{
An \code{R6Class} generator object
}
\description{
Simple object to hold account credentials, e.g. to perform login operations.  If refreshToken is given, it is usually preferred over password based authentication.  But in the end this is up to the respective web service.

AccountCredentials Class
}
\details{
Create a new AccountCredentials
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{username}}{character [optional]}

\item{\code{password}}{character [optional]}

\item{\code{refreshToken}}{character [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-AccountCredentials-new}{\code{AccountCredentials$new()}}
\item \href{#method-AccountCredentials-toJSON}{\code{AccountCredentials$toJSON()}}
\item \href{#method-AccountCredentials-fromJSON}{\code{AccountCredentials$fromJSON()}}
\item \href{#method-AccountCredentials-toJSONString}{\code{AccountCredentials$toJSONString()}}
\item \href{#method-AccountCredentials-fromJSONString}{\code{AccountCredentials$fromJSONString()}}
\item \href{#method-AccountCredentials-validateJSON}{\code{AccountCredentials$validateJSON()}}
\item \href{#method-AccountCredentials-toString}{\code{AccountCredentials$toString()}}
\item \href{#method-AccountCredentials-isValid}{\code{AccountCredentials$isValid()}}
\item \href{#method-AccountCredentials-getInvalidFields}{\code{AccountCredentials$getInvalidFields()}}
\item \href{#method-AccountCredentials-print}{\code{AccountCredentials$print()}}
\item \href{#method-AccountCredentials-clone}{\code{AccountCredentials$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AccountCredentials-new"></a>}}
\if{latex}{\out{\hypertarget{method-AccountCredentials-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new AccountCredentials class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AccountCredentials$new(
  username = NULL,
  password = NULL,
  refreshToken = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{username}}{username}

\item{\code{password}}{password}

\item{\code{refreshToken}}{refreshToken}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AccountCredentials-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-AccountCredentials-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AccountCredentials$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
AccountCredentials in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AccountCredentials-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-AccountCredentials-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of AccountCredentials
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AccountCredentials$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of AccountCredentials
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AccountCredentials-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-AccountCredentials-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AccountCredentials$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
AccountCredentials in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AccountCredentials-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-AccountCredentials-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of AccountCredentials
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AccountCredentials$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of AccountCredentials
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AccountCredentials-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-AccountCredentials-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to AccountCredentials and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AccountCredentials$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AccountCredentials-toString"></a>}}
\if{latex}{\out{\hypertarget{method-AccountCredentials-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AccountCredentials$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of AccountCredentials
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AccountCredentials-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-AccountCredentials-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AccountCredentials$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AccountCredentials-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-AccountCredentials-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AccountCredentials$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AccountCredentials-print"></a>}}
\if{latex}{\out{\hypertarget{method-AccountCredentials-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AccountCredentials$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AccountCredentials-clone"></a>}}
\if{latex}{\out{\hypertarget{method-AccountCredentials-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AccountCredentials$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
