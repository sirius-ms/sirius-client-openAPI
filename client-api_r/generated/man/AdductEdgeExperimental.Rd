% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/adduct_edge_experimental.R
\docType{class}
\name{AdductEdgeExperimental}
\alias{AdductEdgeExperimental}
\title{AdductEdgeExperimental}
\format{
An \code{R6Class} generator object
}
\description{
EXPERIMENTAL: This schema is experimental and may be changed (or even removed) without notice until it is declared stable.

AdductEdgeExperimental Class
}
\details{
Create a new AdductEdgeExperimental
}
\examples{

## ------------------------------------------------
## Method `AdductEdgeExperimental$toList`
## ------------------------------------------------

# convert array of AdductEdgeExperimental (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{mzDelta}}{numeric [optional]}

\item{\code{annotation}}{character [optional]}

\item{\code{from}}{integer [optional]}

\item{\code{to}}{integer [optional]}

\item{\code{mergedCorrelation}}{numeric [optional]}

\item{\code{representativeCorrelation}}{numeric [optional]}

\item{\code{ms2cosine}}{numeric [optional]}

\item{\code{pvalue}}{numeric [optional]}

\item{\code{intensityRatioScore}}{numeric [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-AdductEdgeExperimental-new}{\code{AdductEdgeExperimental$new()}}
\item \href{#method-AdductEdgeExperimental-toJSON}{\code{AdductEdgeExperimental$toJSON()}}
\item \href{#method-AdductEdgeExperimental-toList}{\code{AdductEdgeExperimental$toList()}}
\item \href{#method-AdductEdgeExperimental-toSimpleType}{\code{AdductEdgeExperimental$toSimpleType()}}
\item \href{#method-AdductEdgeExperimental-fromJSON}{\code{AdductEdgeExperimental$fromJSON()}}
\item \href{#method-AdductEdgeExperimental-toJSONString}{\code{AdductEdgeExperimental$toJSONString()}}
\item \href{#method-AdductEdgeExperimental-fromJSONString}{\code{AdductEdgeExperimental$fromJSONString()}}
\item \href{#method-AdductEdgeExperimental-validateJSON}{\code{AdductEdgeExperimental$validateJSON()}}
\item \href{#method-AdductEdgeExperimental-toString}{\code{AdductEdgeExperimental$toString()}}
\item \href{#method-AdductEdgeExperimental-isValid}{\code{AdductEdgeExperimental$isValid()}}
\item \href{#method-AdductEdgeExperimental-getInvalidFields}{\code{AdductEdgeExperimental$getInvalidFields()}}
\item \href{#method-AdductEdgeExperimental-print}{\code{AdductEdgeExperimental$print()}}
\item \href{#method-AdductEdgeExperimental-clone}{\code{AdductEdgeExperimental$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AdductEdgeExperimental-new"></a>}}
\if{latex}{\out{\hypertarget{method-AdductEdgeExperimental-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new AdductEdgeExperimental class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AdductEdgeExperimental$new(
  mzDelta = NULL,
  annotation = NULL,
  from = NULL,
  to = NULL,
  mergedCorrelation = NULL,
  representativeCorrelation = NULL,
  ms2cosine = NULL,
  pvalue = NULL,
  intensityRatioScore = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{mzDelta}}{mzDelta}

\item{\code{annotation}}{annotation}

\item{\code{from}}{from}

\item{\code{to}}{to}

\item{\code{mergedCorrelation}}{mergedCorrelation}

\item{\code{representativeCorrelation}}{representativeCorrelation}

\item{\code{ms2cosine}}{ms2cosine}

\item{\code{pvalue}}{pvalue}

\item{\code{intensityRatioScore}}{intensityRatioScore}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AdductEdgeExperimental-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-AdductEdgeExperimental-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
Convert to an R object. This method is deprecated. Use `toSimpleType()` instead.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AdductEdgeExperimental$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AdductEdgeExperimental-toList"></a>}}
\if{latex}{\out{\hypertarget{method-AdductEdgeExperimental-toList}{}}}
\subsection{Method \code{toList()}}{
Convert to a List

Convert the R6 object to a list to work more easily with other tooling.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AdductEdgeExperimental$toList()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
AdductEdgeExperimental as a base R list.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# convert array of AdductEdgeExperimental (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AdductEdgeExperimental-toSimpleType"></a>}}
\if{latex}{\out{\hypertarget{method-AdductEdgeExperimental-toSimpleType}{}}}
\subsection{Method \code{toSimpleType()}}{
Convert AdductEdgeExperimental to a base R type
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AdductEdgeExperimental$toSimpleType()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A base R type, e.g. a list or numeric/character array.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AdductEdgeExperimental-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-AdductEdgeExperimental-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of AdductEdgeExperimental
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AdductEdgeExperimental$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of AdductEdgeExperimental
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AdductEdgeExperimental-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-AdductEdgeExperimental-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AdductEdgeExperimental$toJSONString(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Parameters passed to `jsonlite::toJSON`}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
AdductEdgeExperimental in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AdductEdgeExperimental-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-AdductEdgeExperimental-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of AdductEdgeExperimental
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AdductEdgeExperimental$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of AdductEdgeExperimental
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AdductEdgeExperimental-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-AdductEdgeExperimental-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to AdductEdgeExperimental and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AdductEdgeExperimental$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AdductEdgeExperimental-toString"></a>}}
\if{latex}{\out{\hypertarget{method-AdductEdgeExperimental-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AdductEdgeExperimental$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of AdductEdgeExperimental
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AdductEdgeExperimental-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-AdductEdgeExperimental-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AdductEdgeExperimental$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AdductEdgeExperimental-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-AdductEdgeExperimental-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AdductEdgeExperimental$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AdductEdgeExperimental-print"></a>}}
\if{latex}{\out{\hypertarget{method-AdductEdgeExperimental-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AdductEdgeExperimental$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AdductEdgeExperimental-clone"></a>}}
\if{latex}{\out{\hypertarget{method-AdductEdgeExperimental-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AdductEdgeExperimental$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
