% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/adduct_network_experimental.R
\docType{class}
\name{AdductNetworkExperimental}
\alias{AdductNetworkExperimental}
\title{AdductNetworkExperimental}
\format{
An \code{R6Class} generator object
}
\description{
EXPERIMENTAL: This schema is experimental and may be changed (or even removed) without notice until it is declared stable.

AdductNetworkExperimental Class
}
\details{
Create a new AdductNetworkExperimental
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{nodes}}{list(\link{AdductNodeExperimental}) [optional]}

\item{\code{edges}}{list(\link{AdductEdgeExperimental}) [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-AdductNetworkExperimental-new}{\code{AdductNetworkExperimental$new()}}
\item \href{#method-AdductNetworkExperimental-toJSON}{\code{AdductNetworkExperimental$toJSON()}}
\item \href{#method-AdductNetworkExperimental-fromJSON}{\code{AdductNetworkExperimental$fromJSON()}}
\item \href{#method-AdductNetworkExperimental-toJSONString}{\code{AdductNetworkExperimental$toJSONString()}}
\item \href{#method-AdductNetworkExperimental-fromJSONString}{\code{AdductNetworkExperimental$fromJSONString()}}
\item \href{#method-AdductNetworkExperimental-validateJSON}{\code{AdductNetworkExperimental$validateJSON()}}
\item \href{#method-AdductNetworkExperimental-toString}{\code{AdductNetworkExperimental$toString()}}
\item \href{#method-AdductNetworkExperimental-isValid}{\code{AdductNetworkExperimental$isValid()}}
\item \href{#method-AdductNetworkExperimental-getInvalidFields}{\code{AdductNetworkExperimental$getInvalidFields()}}
\item \href{#method-AdductNetworkExperimental-print}{\code{AdductNetworkExperimental$print()}}
\item \href{#method-AdductNetworkExperimental-clone}{\code{AdductNetworkExperimental$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AdductNetworkExperimental-new"></a>}}
\if{latex}{\out{\hypertarget{method-AdductNetworkExperimental-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new AdductNetworkExperimental class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AdductNetworkExperimental$new(nodes = NULL, edges = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{nodes}}{nodes}

\item{\code{edges}}{edges}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AdductNetworkExperimental-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-AdductNetworkExperimental-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AdductNetworkExperimental$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
AdductNetworkExperimental in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AdductNetworkExperimental-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-AdductNetworkExperimental-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of AdductNetworkExperimental
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AdductNetworkExperimental$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of AdductNetworkExperimental
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AdductNetworkExperimental-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-AdductNetworkExperimental-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AdductNetworkExperimental$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
AdductNetworkExperimental in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AdductNetworkExperimental-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-AdductNetworkExperimental-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of AdductNetworkExperimental
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AdductNetworkExperimental$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of AdductNetworkExperimental
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AdductNetworkExperimental-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-AdductNetworkExperimental-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to AdductNetworkExperimental and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AdductNetworkExperimental$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AdductNetworkExperimental-toString"></a>}}
\if{latex}{\out{\hypertarget{method-AdductNetworkExperimental-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AdductNetworkExperimental$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of AdductNetworkExperimental
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AdductNetworkExperimental-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-AdductNetworkExperimental-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AdductNetworkExperimental$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AdductNetworkExperimental-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-AdductNetworkExperimental-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AdductNetworkExperimental$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AdductNetworkExperimental-print"></a>}}
\if{latex}{\out{\hypertarget{method-AdductNetworkExperimental-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AdductNetworkExperimental$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AdductNetworkExperimental-clone"></a>}}
\if{latex}{\out{\hypertarget{method-AdductNetworkExperimental-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AdductNetworkExperimental$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
