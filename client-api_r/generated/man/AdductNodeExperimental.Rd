% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/adduct_node_experimental.R
\docType{class}
\name{AdductNodeExperimental}
\alias{AdductNodeExperimental}
\title{AdductNodeExperimental}
\format{
An \code{R6Class} generator object
}
\description{
EXPERIMENTAL: This schema is experimental and may be changed (or even removed) without notice until it is declared stable.

AdductNodeExperimental Class
}
\details{
Create a new AdductNodeExperimental
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{alignedFeatureId}}{integer [optional]}

\item{\code{mz}}{numeric [optional]}

\item{\code{adductAnnotations}}{named list(numeric) [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-AdductNodeExperimental-new}{\code{AdductNodeExperimental$new()}}
\item \href{#method-AdductNodeExperimental-toJSON}{\code{AdductNodeExperimental$toJSON()}}
\item \href{#method-AdductNodeExperimental-fromJSON}{\code{AdductNodeExperimental$fromJSON()}}
\item \href{#method-AdductNodeExperimental-toJSONString}{\code{AdductNodeExperimental$toJSONString()}}
\item \href{#method-AdductNodeExperimental-fromJSONString}{\code{AdductNodeExperimental$fromJSONString()}}
\item \href{#method-AdductNodeExperimental-validateJSON}{\code{AdductNodeExperimental$validateJSON()}}
\item \href{#method-AdductNodeExperimental-toString}{\code{AdductNodeExperimental$toString()}}
\item \href{#method-AdductNodeExperimental-isValid}{\code{AdductNodeExperimental$isValid()}}
\item \href{#method-AdductNodeExperimental-getInvalidFields}{\code{AdductNodeExperimental$getInvalidFields()}}
\item \href{#method-AdductNodeExperimental-print}{\code{AdductNodeExperimental$print()}}
\item \href{#method-AdductNodeExperimental-clone}{\code{AdductNodeExperimental$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AdductNodeExperimental-new"></a>}}
\if{latex}{\out{\hypertarget{method-AdductNodeExperimental-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new AdductNodeExperimental class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AdductNodeExperimental$new(
  alignedFeatureId = NULL,
  mz = NULL,
  adductAnnotations = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{alignedFeatureId}}{alignedFeatureId}

\item{\code{mz}}{mz}

\item{\code{adductAnnotations}}{adductAnnotations}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AdductNodeExperimental-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-AdductNodeExperimental-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AdductNodeExperimental$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
AdductNodeExperimental in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AdductNodeExperimental-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-AdductNodeExperimental-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of AdductNodeExperimental
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AdductNodeExperimental$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of AdductNodeExperimental
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AdductNodeExperimental-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-AdductNodeExperimental-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AdductNodeExperimental$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
AdductNodeExperimental in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AdductNodeExperimental-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-AdductNodeExperimental-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of AdductNodeExperimental
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AdductNodeExperimental$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of AdductNodeExperimental
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AdductNodeExperimental-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-AdductNodeExperimental-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to AdductNodeExperimental and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AdductNodeExperimental$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AdductNodeExperimental-toString"></a>}}
\if{latex}{\out{\hypertarget{method-AdductNodeExperimental-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AdductNodeExperimental$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of AdductNodeExperimental
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AdductNodeExperimental-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-AdductNodeExperimental-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AdductNodeExperimental$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AdductNodeExperimental-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-AdductNodeExperimental-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AdductNodeExperimental$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AdductNodeExperimental-print"></a>}}
\if{latex}{\out{\hypertarget{method-AdductNodeExperimental-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AdductNodeExperimental$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AdductNodeExperimental-clone"></a>}}
\if{latex}{\out{\hypertarget{method-AdductNodeExperimental-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AdductNodeExperimental$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
