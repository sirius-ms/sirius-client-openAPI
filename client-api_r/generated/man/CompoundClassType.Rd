% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compound_class_type.R
\docType{class}
\name{CompoundClassType}
\alias{CompoundClassType}
\title{CompoundClassType}
\format{
An \code{R6Class} generator object
}
\description{
CompoundClassType Class
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-CompoundClassType-new}{\code{CompoundClassType$new()}}
\item \href{#method-CompoundClassType-toJSON}{\code{CompoundClassType$toJSON()}}
\item \href{#method-CompoundClassType-fromJSON}{\code{CompoundClassType$fromJSON()}}
\item \href{#method-CompoundClassType-toJSONString}{\code{CompoundClassType$toJSONString()}}
\item \href{#method-CompoundClassType-fromJSONString}{\code{CompoundClassType$fromJSONString()}}
\item \href{#method-CompoundClassType-clone}{\code{CompoundClassType$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CompoundClassType-new"></a>}}
\if{latex}{\out{\hypertarget{method-CompoundClassType-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new CompoundClassType class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CompoundClassType$new(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CompoundClassType-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-CompoundClassType-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CompoundClassType$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
CompoundClassType in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CompoundClassType-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-CompoundClassType-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of CompoundClassType
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CompoundClassType$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of CompoundClassType
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CompoundClassType-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-CompoundClassType-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CompoundClassType$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
CompoundClassType in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CompoundClassType-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-CompoundClassType-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of CompoundClassType
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CompoundClassType$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of CompoundClassType
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CompoundClassType-clone"></a>}}
\if{latex}{\out{\hypertarget{method-CompoundClassType-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CompoundClassType$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
