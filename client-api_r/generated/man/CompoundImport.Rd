% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compound_import.R
\docType{class}
\name{CompoundImport}
\alias{CompoundImport}
\title{CompoundImport}
\format{
An \code{R6Class} generator object
}
\description{
CompoundImport Class

CompoundImport Class
}
\details{
Create a new CompoundImport
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{name}}{Some (optional) human-readable name character [optional]}

\item{\code{features}}{The features this compound consists of. list(\link{FeatureImport})}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-CompoundImport-new}{\code{CompoundImport$new()}}
\item \href{#method-CompoundImport-toJSON}{\code{CompoundImport$toJSON()}}
\item \href{#method-CompoundImport-fromJSON}{\code{CompoundImport$fromJSON()}}
\item \href{#method-CompoundImport-toJSONString}{\code{CompoundImport$toJSONString()}}
\item \href{#method-CompoundImport-fromJSONString}{\code{CompoundImport$fromJSONString()}}
\item \href{#method-CompoundImport-validateJSON}{\code{CompoundImport$validateJSON()}}
\item \href{#method-CompoundImport-toString}{\code{CompoundImport$toString()}}
\item \href{#method-CompoundImport-isValid}{\code{CompoundImport$isValid()}}
\item \href{#method-CompoundImport-getInvalidFields}{\code{CompoundImport$getInvalidFields()}}
\item \href{#method-CompoundImport-print}{\code{CompoundImport$print()}}
\item \href{#method-CompoundImport-clone}{\code{CompoundImport$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CompoundImport-new"></a>}}
\if{latex}{\out{\hypertarget{method-CompoundImport-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new CompoundImport class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CompoundImport$new(features, name = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{features}}{The features this compound consists of.}

\item{\code{name}}{Some (optional) human-readable name}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CompoundImport-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-CompoundImport-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CompoundImport$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
CompoundImport in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CompoundImport-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-CompoundImport-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of CompoundImport
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CompoundImport$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of CompoundImport
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CompoundImport-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-CompoundImport-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CompoundImport$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
CompoundImport in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CompoundImport-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-CompoundImport-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of CompoundImport
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CompoundImport$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of CompoundImport
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CompoundImport-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-CompoundImport-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to CompoundImport and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CompoundImport$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CompoundImport-toString"></a>}}
\if{latex}{\out{\hypertarget{method-CompoundImport-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CompoundImport$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of CompoundImport
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CompoundImport-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-CompoundImport-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CompoundImport$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CompoundImport-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-CompoundImport-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CompoundImport$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CompoundImport-print"></a>}}
\if{latex}{\out{\hypertarget{method-CompoundImport-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CompoundImport$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CompoundImport-clone"></a>}}
\if{latex}{\out{\hypertarget{method-CompoundImport-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CompoundImport$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
