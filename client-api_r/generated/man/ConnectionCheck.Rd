% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/connection_check.R
\docType{class}
\name{ConnectionCheck}
\alias{ConnectionCheck}
\title{ConnectionCheck}
\format{
An \code{R6Class} generator object
}
\description{
ConnectionCheck Class

ConnectionCheck Class
}
\details{
Create a new ConnectionCheck
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{workerInfo}}{\link{WorkerList} [optional]}

\item{\code{licenseInfo}}{\link{LicenseInfo}}

\item{\code{errors}}{List of errors ordered by significance. first error should be reported and addressed first.  Following errors might just be follow-up errors list(\link{ConnectionError})}

\item{\code{supportsPosPredictorTypes}}{character}

\item{\code{supportsNegPredictorTypes}}{character}

\item{\code{availableWorkers}}{list(character)}

\item{\code{unAvailableWorkers}}{list(character)}

\item{\code{supportsAllPredictorTypes}}{character}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ConnectionCheck-new}{\code{ConnectionCheck$new()}}
\item \href{#method-ConnectionCheck-toJSON}{\code{ConnectionCheck$toJSON()}}
\item \href{#method-ConnectionCheck-fromJSON}{\code{ConnectionCheck$fromJSON()}}
\item \href{#method-ConnectionCheck-toJSONString}{\code{ConnectionCheck$toJSONString()}}
\item \href{#method-ConnectionCheck-fromJSONString}{\code{ConnectionCheck$fromJSONString()}}
\item \href{#method-ConnectionCheck-validateJSON}{\code{ConnectionCheck$validateJSON()}}
\item \href{#method-ConnectionCheck-toString}{\code{ConnectionCheck$toString()}}
\item \href{#method-ConnectionCheck-isValid}{\code{ConnectionCheck$isValid()}}
\item \href{#method-ConnectionCheck-getInvalidFields}{\code{ConnectionCheck$getInvalidFields()}}
\item \href{#method-ConnectionCheck-print}{\code{ConnectionCheck$print()}}
\item \href{#method-ConnectionCheck-clone}{\code{ConnectionCheck$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectionCheck-new"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectionCheck-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new ConnectionCheck class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectionCheck$new(
  licenseInfo,
  errors,
  supportsPosPredictorTypes,
  supportsNegPredictorTypes,
  availableWorkers,
  unAvailableWorkers,
  supportsAllPredictorTypes,
  workerInfo = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{licenseInfo}}{licenseInfo}

\item{\code{errors}}{List of errors ordered by significance. first error should be reported and addressed first.  Following errors might just be follow-up errors}

\item{\code{supportsPosPredictorTypes}}{supportsPosPredictorTypes}

\item{\code{supportsNegPredictorTypes}}{supportsNegPredictorTypes}

\item{\code{availableWorkers}}{availableWorkers}

\item{\code{unAvailableWorkers}}{unAvailableWorkers}

\item{\code{supportsAllPredictorTypes}}{supportsAllPredictorTypes}

\item{\code{workerInfo}}{workerInfo}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectionCheck-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectionCheck-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectionCheck$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
ConnectionCheck in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectionCheck-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectionCheck-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of ConnectionCheck
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectionCheck$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of ConnectionCheck
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectionCheck-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectionCheck-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectionCheck$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
ConnectionCheck in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectionCheck-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectionCheck-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of ConnectionCheck
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectionCheck$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of ConnectionCheck
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectionCheck-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectionCheck-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to ConnectionCheck and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectionCheck$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectionCheck-toString"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectionCheck-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectionCheck$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of ConnectionCheck
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectionCheck-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectionCheck-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectionCheck$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectionCheck-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectionCheck-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectionCheck$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectionCheck-print"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectionCheck-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectionCheck$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectionCheck-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectionCheck-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectionCheck$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
