% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/consensus_annotations_de_novo.R
\docType{class}
\name{ConsensusAnnotationsDeNovo}
\alias{ConsensusAnnotationsDeNovo}
\title{ConsensusAnnotationsDeNovo}
\format{
An \code{R6Class} generator object
}
\description{
ConsensusAnnotationsDeNovo Class

ConsensusAnnotationsDeNovo Class
}
\details{
Create a new ConsensusAnnotationsDeNovo
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{molecularFormula}}{Molecular formula of the consensus annotation  Might be null if no consensus formula is available. character [optional]}

\item{\code{compoundClasses}}{\link{CompoundClasses} [optional]}

\item{\code{supportingFeatureIds}}{FeatureIds where the topAnnotation supports this annotation. list(character) [optional]}

\item{\code{selectionCriterion}}{Criterion that was used to select the consensus annotation. character [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ConsensusAnnotationsDeNovo-new}{\code{ConsensusAnnotationsDeNovo$new()}}
\item \href{#method-ConsensusAnnotationsDeNovo-toJSON}{\code{ConsensusAnnotationsDeNovo$toJSON()}}
\item \href{#method-ConsensusAnnotationsDeNovo-fromJSON}{\code{ConsensusAnnotationsDeNovo$fromJSON()}}
\item \href{#method-ConsensusAnnotationsDeNovo-toJSONString}{\code{ConsensusAnnotationsDeNovo$toJSONString()}}
\item \href{#method-ConsensusAnnotationsDeNovo-fromJSONString}{\code{ConsensusAnnotationsDeNovo$fromJSONString()}}
\item \href{#method-ConsensusAnnotationsDeNovo-validateJSON}{\code{ConsensusAnnotationsDeNovo$validateJSON()}}
\item \href{#method-ConsensusAnnotationsDeNovo-toString}{\code{ConsensusAnnotationsDeNovo$toString()}}
\item \href{#method-ConsensusAnnotationsDeNovo-isValid}{\code{ConsensusAnnotationsDeNovo$isValid()}}
\item \href{#method-ConsensusAnnotationsDeNovo-getInvalidFields}{\code{ConsensusAnnotationsDeNovo$getInvalidFields()}}
\item \href{#method-ConsensusAnnotationsDeNovo-print}{\code{ConsensusAnnotationsDeNovo$print()}}
\item \href{#method-ConsensusAnnotationsDeNovo-clone}{\code{ConsensusAnnotationsDeNovo$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConsensusAnnotationsDeNovo-new"></a>}}
\if{latex}{\out{\hypertarget{method-ConsensusAnnotationsDeNovo-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new ConsensusAnnotationsDeNovo class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConsensusAnnotationsDeNovo$new(
  molecularFormula = NULL,
  compoundClasses = NULL,
  supportingFeatureIds = NULL,
  selectionCriterion = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{molecularFormula}}{Molecular formula of the consensus annotation  Might be null if no consensus formula is available.}

\item{\code{compoundClasses}}{compoundClasses}

\item{\code{supportingFeatureIds}}{FeatureIds where the topAnnotation supports this annotation.}

\item{\code{selectionCriterion}}{Criterion that was used to select the consensus annotation.}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConsensusAnnotationsDeNovo-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ConsensusAnnotationsDeNovo-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConsensusAnnotationsDeNovo$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
ConsensusAnnotationsDeNovo in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConsensusAnnotationsDeNovo-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ConsensusAnnotationsDeNovo-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of ConsensusAnnotationsDeNovo
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConsensusAnnotationsDeNovo$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of ConsensusAnnotationsDeNovo
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConsensusAnnotationsDeNovo-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-ConsensusAnnotationsDeNovo-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConsensusAnnotationsDeNovo$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
ConsensusAnnotationsDeNovo in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConsensusAnnotationsDeNovo-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-ConsensusAnnotationsDeNovo-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of ConsensusAnnotationsDeNovo
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConsensusAnnotationsDeNovo$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of ConsensusAnnotationsDeNovo
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConsensusAnnotationsDeNovo-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ConsensusAnnotationsDeNovo-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to ConsensusAnnotationsDeNovo and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConsensusAnnotationsDeNovo$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConsensusAnnotationsDeNovo-toString"></a>}}
\if{latex}{\out{\hypertarget{method-ConsensusAnnotationsDeNovo-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConsensusAnnotationsDeNovo$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of ConsensusAnnotationsDeNovo
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConsensusAnnotationsDeNovo-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-ConsensusAnnotationsDeNovo-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConsensusAnnotationsDeNovo$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConsensusAnnotationsDeNovo-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-ConsensusAnnotationsDeNovo-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConsensusAnnotationsDeNovo$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConsensusAnnotationsDeNovo-print"></a>}}
\if{latex}{\out{\hypertarget{method-ConsensusAnnotationsDeNovo-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConsensusAnnotationsDeNovo$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConsensusAnnotationsDeNovo-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ConsensusAnnotationsDeNovo-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConsensusAnnotationsDeNovo$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
