% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deviation.R
\docType{class}
\name{Deviation}
\alias{Deviation}
\title{Deviation}
\format{
An \code{R6Class} generator object
}
\description{
Deviation Class

Deviation Class
}
\details{
Create a new Deviation
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{ppm}}{numeric [optional]}

\item{\code{absolute}}{numeric [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Deviation-new}{\code{Deviation$new()}}
\item \href{#method-Deviation-toJSON}{\code{Deviation$toJSON()}}
\item \href{#method-Deviation-fromJSON}{\code{Deviation$fromJSON()}}
\item \href{#method-Deviation-toJSONString}{\code{Deviation$toJSONString()}}
\item \href{#method-Deviation-fromJSONString}{\code{Deviation$fromJSONString()}}
\item \href{#method-Deviation-validateJSON}{\code{Deviation$validateJSON()}}
\item \href{#method-Deviation-toString}{\code{Deviation$toString()}}
\item \href{#method-Deviation-isValid}{\code{Deviation$isValid()}}
\item \href{#method-Deviation-getInvalidFields}{\code{Deviation$getInvalidFields()}}
\item \href{#method-Deviation-print}{\code{Deviation$print()}}
\item \href{#method-Deviation-clone}{\code{Deviation$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Deviation-new"></a>}}
\if{latex}{\out{\hypertarget{method-Deviation-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new Deviation class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Deviation$new(ppm = NULL, absolute = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{ppm}}{ppm}

\item{\code{absolute}}{absolute}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Deviation-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Deviation-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Deviation$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Deviation in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Deviation-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Deviation-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of Deviation
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Deviation$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Deviation
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Deviation-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Deviation-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Deviation$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Deviation in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Deviation-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Deviation-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of Deviation
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Deviation$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Deviation
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Deviation-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Deviation-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to Deviation and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Deviation$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Deviation-toString"></a>}}
\if{latex}{\out{\hypertarget{method-Deviation-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Deviation$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of Deviation
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Deviation-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-Deviation-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Deviation$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Deviation-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-Deviation-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Deviation$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Deviation-print"></a>}}
\if{latex}{\out{\hypertarget{method-Deviation-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Deviation$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Deviation-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Deviation-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Deviation$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
