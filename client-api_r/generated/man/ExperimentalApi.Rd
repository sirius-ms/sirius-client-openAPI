% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/experimental_api.R
\docType{class}
\name{ExperimentalApi}
\alias{ExperimentalApi}
\title{Experimental operations}
\format{
An \code{R6Class} generator object
}
\description{
ExperimentalApi
}
\details{
SIRIUS Nightsky API

REST API that provides the full functionality of SIRIUS and its web services as background service. It is intended as entry-point for scripting languages and software integration SDKs.This API is exposed by SIRIUS 6

The version of the OpenAPI document: 2.1
Generated by: https://openapi-generator.tech
}
\section{Methods}{

\describe{
\strong{ GetAlignedFeaturesQuality } \emph{ Get data quality information for feature (aligned over runs) with the given identifier from the specified project-space. }
Get data quality information for feature (aligned over runs) with the given identifier from the specified project-space.

\itemize{
\item \emph{ @param } project_id character
\item \emph{ @param } aligned_feature_id character
\item \emph{ @returnType } \link{AlignedFeatureQuality} \cr


\item status code : 200 | AlignedFeatureQuality quality information of the respective feature.

\item return type : AlignedFeatureQuality
\item response headers :

\tabular{ll}{
}
}

}
}

\examples{
\dontrun{
####################  GetAlignedFeaturesQuality  ####################

library(Rsirius)
var_project_id <- "project_id_example" # character | project-space to read from.
var_aligned_feature_id <- "aligned_feature_id_example" # character | identifier of feature (aligned over runs) to access.

#Get data quality information for feature (aligned over runs) with the given identifier from the specified project-space.
api_instance <- rsirius_api$new()

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$GetAlignedFeaturesQuality(var_project_id, var_aligned_feature_iddata_file = "result.txt")
result <- api_instance$experimental_api$GetAlignedFeaturesQuality(var_project_id, var_aligned_feature_id)
dput(result)


}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{api_client}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ExperimentalApi-new}{\code{ExperimentalApi$new()}}
\item \href{#method-ExperimentalApi-GetAlignedFeaturesQuality}{\code{ExperimentalApi$GetAlignedFeaturesQuality()}}
\item \href{#method-ExperimentalApi-GetAlignedFeaturesQualityWithHttpInfo}{\code{ExperimentalApi$GetAlignedFeaturesQualityWithHttpInfo()}}
\item \href{#method-ExperimentalApi-clone}{\code{ExperimentalApi$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ExperimentalApi-new"></a>}}
\if{latex}{\out{\hypertarget{method-ExperimentalApi-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new ExperimentalApi.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ExperimentalApi$new(api_client)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{api_client}}{An instance of API client.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ExperimentalApi-GetAlignedFeaturesQuality"></a>}}
\if{latex}{\out{\hypertarget{method-ExperimentalApi-GetAlignedFeaturesQuality}{}}}
\subsection{Method \code{GetAlignedFeaturesQuality()}}{
Get data quality information for feature (aligned over runs) with the given identifier from the specified project-space.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ExperimentalApi$GetAlignedFeaturesQuality(
  project_id,
  aligned_feature_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{project_id}}{project-space to read from.}

\item{\code{aligned_feature_id}}{identifier of feature (aligned over runs) to access.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
AlignedFeatureQuality
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ExperimentalApi-GetAlignedFeaturesQualityWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-ExperimentalApi-GetAlignedFeaturesQualityWithHttpInfo}{}}}
\subsection{Method \code{GetAlignedFeaturesQualityWithHttpInfo()}}{
Get data quality information for feature (aligned over runs) with the given identifier from the specified project-space.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ExperimentalApi$GetAlignedFeaturesQualityWithHttpInfo(
  project_id,
  aligned_feature_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{project_id}}{project-space to read from.}

\item{\code{aligned_feature_id}}{identifier of feature (aligned over runs) to access.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (AlignedFeatureQuality) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ExperimentalApi-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ExperimentalApi-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ExperimentalApi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
