% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/feature_statistics_api.R
\docType{class}
\name{FeatureStatisticsApi}
\alias{FeatureStatisticsApi}
\title{FeatureStatistics operations}
\format{
An \code{R6Class} generator object
}
\description{
FeatureStatisticsApi
}
\details{
SIRIUS Nightsky API

REST API that provides the full functionality of SIRIUS and its web services as background service. It is intended as entry-point for scripting languages and software integration SDKs.This API is exposed by SIRIUS 6

The version of the OpenAPI document: 3.1
Generated by: https://openapi-generator.tech
}
\examples{
\dontrun{
####################  ComputeAlignedFeatureFoldChangesExperimental  ####################

library(Rsirius)
var_project_id <- "project_id_example" # character | project-space to compute the fold change in.
var_left_group_name <- "left_group_name_example" # character | name of the left tag group.
var_right_group_name <- "right_group_name_example" # character | name of the right tag group.
var_aggregation <- "AVG" # character | aggregation type. (Optional)
var_quantification <- "APEX_INTENSITY" # character | quantification type. (Optional)
var_opt_fields <- c("none") # array[character] | job opt fields. (Optional)

#[EXPERIMENTAL] Compute the fold change between two groups of runs
api_instance <- rsirius_api$new()

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$ComputeAlignedFeatureFoldChangesExperimental(var_project_id, var_left_group_name, var_right_group_name, aggregation = var_aggregation, quantification = var_quantification, opt_fields = var_opt_fieldsdata_file = "result.txt")
result <- api_instance$feature_statistics_api$ComputeAlignedFeatureFoldChangesExperimental(var_project_id, var_left_group_name, var_right_group_name, aggregation = var_aggregation, quantification = var_quantification, opt_fields = var_opt_fields)
dput(result)


####################  DeleteAlignedFeatureFoldChangesExperimental  ####################

library(Rsirius)
var_project_id <- "project_id_example" # character | project-space to delete from.
var_left_group_name <- "left_group_name_example" # character | name of the left group.
var_right_group_name <- "right_group_name_example" # character | name of the right group.
var_aggregation <- "AVG" # character |  (Optional)
var_quantification <- "APEX_INTENSITY" # character |  (Optional)

#[EXPERIMENTAL] Delete fold changes
api_instance <- rsirius_api$new()

api_instance$feature_statistics_api$DeleteAlignedFeatureFoldChangesExperimental(var_project_id, var_left_group_name, var_right_group_name, aggregation = var_aggregation, quantification = var_quantification)


####################  GetAlignedFeatureFoldChangeTableExperimental  ####################

library(Rsirius)
var_project_id <- "project_id_example" # character | project-space to read from.
var_aggregation <- "AVG" # character | aggregation type. (Optional)
var_quantification <- "APEX_INTENSITY" # character | quantification type. (Optional)

#[EXPERIMENTAL] Get table of all fold changes in the project space
api_instance <- rsirius_api$new()

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$GetAlignedFeatureFoldChangeTableExperimental(var_project_id, aggregation = var_aggregation, quantification = var_quantificationdata_file = "result.txt")
result <- api_instance$feature_statistics_api$GetAlignedFeatureFoldChangeTableExperimental(var_project_id, aggregation = var_aggregation, quantification = var_quantification)
dput(result)


####################  GetFoldChangesByAlignedFeatureExperimental  ####################

library(Rsirius)
var_project_id <- "project_id_example" # character | project-space to read from.
var_object_id <- "object_id_example" # character | id of the object the fold changes are assigned to.

#[EXPERIMENTAL] List all fold changes that are associated with an object
api_instance <- rsirius_api$new()

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$GetFoldChangesByAlignedFeatureExperimental(var_project_id, var_object_iddata_file = "result.txt")
result <- api_instance$feature_statistics_api$GetFoldChangesByAlignedFeatureExperimental(var_project_id, var_object_id)
dput(result)


}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{api_client}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-FeatureStatisticsApi-new}{\code{FeatureStatisticsApi$new()}}
\item \href{#method-FeatureStatisticsApi-ComputeAlignedFeatureFoldChangesExperimental}{\code{FeatureStatisticsApi$ComputeAlignedFeatureFoldChangesExperimental()}}
\item \href{#method-FeatureStatisticsApi-ComputeAlignedFeatureFoldChangesExperimentalWithHttpInfo}{\code{FeatureStatisticsApi$ComputeAlignedFeatureFoldChangesExperimentalWithHttpInfo()}}
\item \href{#method-FeatureStatisticsApi-DeleteAlignedFeatureFoldChangesExperimental}{\code{FeatureStatisticsApi$DeleteAlignedFeatureFoldChangesExperimental()}}
\item \href{#method-FeatureStatisticsApi-DeleteAlignedFeatureFoldChangesExperimentalWithHttpInfo}{\code{FeatureStatisticsApi$DeleteAlignedFeatureFoldChangesExperimentalWithHttpInfo()}}
\item \href{#method-FeatureStatisticsApi-GetAlignedFeatureFoldChangeTableExperimental}{\code{FeatureStatisticsApi$GetAlignedFeatureFoldChangeTableExperimental()}}
\item \href{#method-FeatureStatisticsApi-GetAlignedFeatureFoldChangeTableExperimentalWithHttpInfo}{\code{FeatureStatisticsApi$GetAlignedFeatureFoldChangeTableExperimentalWithHttpInfo()}}
\item \href{#method-FeatureStatisticsApi-GetFoldChangesByAlignedFeatureExperimental}{\code{FeatureStatisticsApi$GetFoldChangesByAlignedFeatureExperimental()}}
\item \href{#method-FeatureStatisticsApi-GetFoldChangesByAlignedFeatureExperimentalWithHttpInfo}{\code{FeatureStatisticsApi$GetFoldChangesByAlignedFeatureExperimentalWithHttpInfo()}}
\item \href{#method-FeatureStatisticsApi-clone}{\code{FeatureStatisticsApi$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FeatureStatisticsApi-new"></a>}}
\if{latex}{\out{\hypertarget{method-FeatureStatisticsApi-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new FeatureStatisticsApi.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FeatureStatisticsApi$new(api_client)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{api_client}}{An instance of API client.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FeatureStatisticsApi-ComputeAlignedFeatureFoldChangesExperimental"></a>}}
\if{latex}{\out{\hypertarget{method-FeatureStatisticsApi-ComputeAlignedFeatureFoldChangesExperimental}{}}}
\subsection{Method \code{ComputeAlignedFeatureFoldChangesExperimental()}}{
[EXPERIMENTAL] Compute the fold change between two groups of runs
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FeatureStatisticsApi$ComputeAlignedFeatureFoldChangesExperimental(
  project_id,
  left_group_name,
  right_group_name,
  aggregation = "AVG",
  quantification = "APEX_INTENSITY",
  opt_fields = list("progress"),
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{project_id}}{project-space to compute the fold change in.}

\item{\code{left_group_name}}{name of the left tag group.}

\item{\code{right_group_name}}{name of the right tag group.}

\item{\code{aggregation}}{(optional) aggregation type. (default value: "AVG")}

\item{\code{quantification}}{(optional) quantification type. (default value: "APEX_INTENSITY")}

\item{\code{opt_fields}}{(optional) job opt fields. (default value: ["progress"])}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Job
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FeatureStatisticsApi-ComputeAlignedFeatureFoldChangesExperimentalWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-FeatureStatisticsApi-ComputeAlignedFeatureFoldChangesExperimentalWithHttpInfo}{}}}
\subsection{Method \code{ComputeAlignedFeatureFoldChangesExperimentalWithHttpInfo()}}{
[EXPERIMENTAL] Compute the fold change between two groups of runs
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FeatureStatisticsApi$ComputeAlignedFeatureFoldChangesExperimentalWithHttpInfo(
  project_id,
  left_group_name,
  right_group_name,
  aggregation = "AVG",
  quantification = "APEX_INTENSITY",
  opt_fields = list("progress"),
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{project_id}}{project-space to compute the fold change in.}

\item{\code{left_group_name}}{name of the left tag group.}

\item{\code{right_group_name}}{name of the right tag group.}

\item{\code{aggregation}}{(optional) aggregation type. (default value: "AVG")}

\item{\code{quantification}}{(optional) quantification type. (default value: "APEX_INTENSITY")}

\item{\code{opt_fields}}{(optional) job opt fields. (default value: ["progress"])}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (Job) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FeatureStatisticsApi-DeleteAlignedFeatureFoldChangesExperimental"></a>}}
\if{latex}{\out{\hypertarget{method-FeatureStatisticsApi-DeleteAlignedFeatureFoldChangesExperimental}{}}}
\subsection{Method \code{DeleteAlignedFeatureFoldChangesExperimental()}}{
[EXPERIMENTAL] Delete fold changes
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FeatureStatisticsApi$DeleteAlignedFeatureFoldChangesExperimental(
  project_id,
  left_group_name,
  right_group_name,
  aggregation = "AVG",
  quantification = "APEX_INTENSITY",
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{project_id}}{project-space to delete from.}

\item{\code{left_group_name}}{name of the left group.}

\item{\code{right_group_name}}{name of the right group.}

\item{\code{aggregation}}{(optional) No description (default value: "AVG")}

\item{\code{quantification}}{(optional) No description (default value: "APEX_INTENSITY")}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
void
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FeatureStatisticsApi-DeleteAlignedFeatureFoldChangesExperimentalWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-FeatureStatisticsApi-DeleteAlignedFeatureFoldChangesExperimentalWithHttpInfo}{}}}
\subsection{Method \code{DeleteAlignedFeatureFoldChangesExperimentalWithHttpInfo()}}{
[EXPERIMENTAL] Delete fold changes
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FeatureStatisticsApi$DeleteAlignedFeatureFoldChangesExperimentalWithHttpInfo(
  project_id,
  left_group_name,
  right_group_name,
  aggregation = "AVG",
  quantification = "APEX_INTENSITY",
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{project_id}}{project-space to delete from.}

\item{\code{left_group_name}}{name of the left group.}

\item{\code{right_group_name}}{name of the right group.}

\item{\code{aggregation}}{(optional) No description (default value: "AVG")}

\item{\code{quantification}}{(optional) No description (default value: "APEX_INTENSITY")}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (void) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FeatureStatisticsApi-GetAlignedFeatureFoldChangeTableExperimental"></a>}}
\if{latex}{\out{\hypertarget{method-FeatureStatisticsApi-GetAlignedFeatureFoldChangeTableExperimental}{}}}
\subsection{Method \code{GetAlignedFeatureFoldChangeTableExperimental()}}{
[EXPERIMENTAL] Get table of all fold changes in the project space
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FeatureStatisticsApi$GetAlignedFeatureFoldChangeTableExperimental(
  project_id,
  aggregation = "AVG",
  quantification = "APEX_INTENSITY",
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{project_id}}{project-space to read from.}

\item{\code{aggregation}}{(optional) aggregation type. (default value: "AVG")}

\item{\code{quantification}}{(optional) quantification type. (default value: "APEX_INTENSITY")}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
StatisticsTable
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FeatureStatisticsApi-GetAlignedFeatureFoldChangeTableExperimentalWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-FeatureStatisticsApi-GetAlignedFeatureFoldChangeTableExperimentalWithHttpInfo}{}}}
\subsection{Method \code{GetAlignedFeatureFoldChangeTableExperimentalWithHttpInfo()}}{
[EXPERIMENTAL] Get table of all fold changes in the project space
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FeatureStatisticsApi$GetAlignedFeatureFoldChangeTableExperimentalWithHttpInfo(
  project_id,
  aggregation = "AVG",
  quantification = "APEX_INTENSITY",
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{project_id}}{project-space to read from.}

\item{\code{aggregation}}{(optional) aggregation type. (default value: "AVG")}

\item{\code{quantification}}{(optional) quantification type. (default value: "APEX_INTENSITY")}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (StatisticsTable) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FeatureStatisticsApi-GetFoldChangesByAlignedFeatureExperimental"></a>}}
\if{latex}{\out{\hypertarget{method-FeatureStatisticsApi-GetFoldChangesByAlignedFeatureExperimental}{}}}
\subsection{Method \code{GetFoldChangesByAlignedFeatureExperimental()}}{
[EXPERIMENTAL] List all fold changes that are associated with an object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FeatureStatisticsApi$GetFoldChangesByAlignedFeatureExperimental(
  project_id,
  object_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{project_id}}{project-space to read from.}

\item{\code{object_id}}{id of the object the fold changes are assigned to.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
array[FoldChange]
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FeatureStatisticsApi-GetFoldChangesByAlignedFeatureExperimentalWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-FeatureStatisticsApi-GetFoldChangesByAlignedFeatureExperimentalWithHttpInfo}{}}}
\subsection{Method \code{GetFoldChangesByAlignedFeatureExperimentalWithHttpInfo()}}{
[EXPERIMENTAL] List all fold changes that are associated with an object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FeatureStatisticsApi$GetFoldChangesByAlignedFeatureExperimentalWithHttpInfo(
  project_id,
  object_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{project_id}}{project-space to read from.}

\item{\code{object_id}}{id of the object the fold changes are assigned to.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (array[FoldChange]) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FeatureStatisticsApi-clone"></a>}}
\if{latex}{\out{\hypertarget{method-FeatureStatisticsApi-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FeatureStatisticsApi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
