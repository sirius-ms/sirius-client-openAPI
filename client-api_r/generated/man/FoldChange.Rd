% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fold_change.R
\docType{class}
\name{FoldChange}
\alias{FoldChange}
\title{FoldChange}
\format{
An \code{R6Class} generator object
}
\description{
FoldChange Class

FoldChange Class
}
\details{
Create a new FoldChange
}
\examples{

## ------------------------------------------------
## Method `FoldChange$toList`
## ------------------------------------------------

# convert array of FoldChange (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{leftGroup}}{character [optional]}

\item{\code{rightGroup}}{character [optional]}

\item{\code{aggregation}}{character [optional]}

\item{\code{quantification}}{character [optional]}

\item{\code{quantType}}{character}

\item{\code{objectId}}{character}

\item{\code{foldChange}}{numeric}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-FoldChange-new}{\code{FoldChange$new()}}
\item \href{#method-FoldChange-toJSON}{\code{FoldChange$toJSON()}}
\item \href{#method-FoldChange-toList}{\code{FoldChange$toList()}}
\item \href{#method-FoldChange-toSimpleType}{\code{FoldChange$toSimpleType()}}
\item \href{#method-FoldChange-fromJSON}{\code{FoldChange$fromJSON()}}
\item \href{#method-FoldChange-toJSONString}{\code{FoldChange$toJSONString()}}
\item \href{#method-FoldChange-fromJSONString}{\code{FoldChange$fromJSONString()}}
\item \href{#method-FoldChange-validateJSON}{\code{FoldChange$validateJSON()}}
\item \href{#method-FoldChange-toString}{\code{FoldChange$toString()}}
\item \href{#method-FoldChange-isValid}{\code{FoldChange$isValid()}}
\item \href{#method-FoldChange-getInvalidFields}{\code{FoldChange$getInvalidFields()}}
\item \href{#method-FoldChange-print}{\code{FoldChange$print()}}
\item \href{#method-FoldChange-clone}{\code{FoldChange$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FoldChange-new"></a>}}
\if{latex}{\out{\hypertarget{method-FoldChange-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new FoldChange class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FoldChange$new(
  quantType,
  objectId,
  foldChange,
  leftGroup = NULL,
  rightGroup = NULL,
  aggregation = NULL,
  quantification = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{quantType}}{quantType}

\item{\code{objectId}}{objectId}

\item{\code{foldChange}}{foldChange}

\item{\code{leftGroup}}{leftGroup}

\item{\code{rightGroup}}{rightGroup}

\item{\code{aggregation}}{aggregation}

\item{\code{quantification}}{quantification}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FoldChange-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-FoldChange-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
Convert to an R object. This method is deprecated. Use `toSimpleType()` instead.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FoldChange$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FoldChange-toList"></a>}}
\if{latex}{\out{\hypertarget{method-FoldChange-toList}{}}}
\subsection{Method \code{toList()}}{
Convert to a List

Convert the R6 object to a list to work more easily with other tooling.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FoldChange$toList()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
FoldChange as a base R list.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# convert array of FoldChange (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FoldChange-toSimpleType"></a>}}
\if{latex}{\out{\hypertarget{method-FoldChange-toSimpleType}{}}}
\subsection{Method \code{toSimpleType()}}{
Convert FoldChange to a base R type
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FoldChange$toSimpleType()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A base R type, e.g. a list or numeric/character array.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FoldChange-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-FoldChange-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of FoldChange
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FoldChange$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of FoldChange
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FoldChange-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-FoldChange-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FoldChange$toJSONString(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Parameters passed to `jsonlite::toJSON`}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
FoldChange in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FoldChange-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-FoldChange-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of FoldChange
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FoldChange$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of FoldChange
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FoldChange-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-FoldChange-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to FoldChange and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FoldChange$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FoldChange-toString"></a>}}
\if{latex}{\out{\hypertarget{method-FoldChange-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FoldChange$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of FoldChange
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FoldChange-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-FoldChange-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FoldChange$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FoldChange-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-FoldChange-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FoldChange$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FoldChange-print"></a>}}
\if{latex}{\out{\hypertarget{method-FoldChange-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FoldChange$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FoldChange-clone"></a>}}
\if{latex}{\out{\hypertarget{method-FoldChange-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FoldChange$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
