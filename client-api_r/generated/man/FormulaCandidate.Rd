% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/formula_candidate.R
\docType{class}
\name{FormulaCandidate}
\alias{FormulaCandidate}
\title{FormulaCandidate}
\format{
An \code{R6Class} generator object
}
\description{
Molecular formula candidate that holds a unique identifier (molecular formula + adduct).  It can be extended with optional scoring metrics and the raw results  such as fragmentation trees and simulated isotope pattern.

FormulaCandidate Class
}
\details{
Create a new FormulaCandidate
}
\examples{

## ------------------------------------------------
## Method `FormulaCandidate$toList`
## ------------------------------------------------

# convert array of FormulaCandidate (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{formulaId}}{Unique identifier of this formula candidate character [optional]}

\item{\code{molecularFormula}}{molecular formula of this formula candidate character [optional]}

\item{\code{adduct}}{Adduct of this formula candidate character [optional]}

\item{\code{rank}}{integer [optional]}

\item{\code{siriusScoreNormalized}}{Normalized Sirius Score of the formula candidate.  If NULL result is not available numeric [optional]}

\item{\code{siriusScore}}{Sirius Score (isotope + tree score) of the formula candidate.  If NULL result is not available numeric [optional]}

\item{\code{isotopeScore}}{numeric [optional]}

\item{\code{treeScore}}{numeric [optional]}

\item{\code{zodiacScore}}{Zodiac Score of the formula candidate.  If NULL result is not available numeric [optional]}

\item{\code{numOfExplainedPeaks}}{integer [optional]}

\item{\code{numOfExplainablePeaks}}{integer [optional]}

\item{\code{totalExplainedIntensity}}{numeric [optional]}

\item{\code{medianMassDeviation}}{\link{Deviation} [optional]}

\item{\code{fragmentationTree}}{\link{FragmentationTree} [optional]}

\item{\code{annotatedSpectrum}}{\link{AnnotatedSpectrum} [optional]}

\item{\code{isotopePatternAnnotation}}{\link{IsotopePatternAnnotation} [optional]}

\item{\code{lipidAnnotation}}{\link{LipidAnnotation} [optional]}

\item{\code{predictedFingerprint}}{Probabilistic molecular fingerprint predicted by CSI:FingerID list(numeric) [optional]}

\item{\code{compoundClasses}}{\link{CompoundClasses} [optional]}

\item{\code{canopusPrediction}}{\link{CanopusPrediction} [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-FormulaCandidate-new}{\code{FormulaCandidate$new()}}
\item \href{#method-FormulaCandidate-toJSON}{\code{FormulaCandidate$toJSON()}}
\item \href{#method-FormulaCandidate-toList}{\code{FormulaCandidate$toList()}}
\item \href{#method-FormulaCandidate-toSimpleType}{\code{FormulaCandidate$toSimpleType()}}
\item \href{#method-FormulaCandidate-fromJSON}{\code{FormulaCandidate$fromJSON()}}
\item \href{#method-FormulaCandidate-toJSONString}{\code{FormulaCandidate$toJSONString()}}
\item \href{#method-FormulaCandidate-fromJSONString}{\code{FormulaCandidate$fromJSONString()}}
\item \href{#method-FormulaCandidate-validateJSON}{\code{FormulaCandidate$validateJSON()}}
\item \href{#method-FormulaCandidate-toString}{\code{FormulaCandidate$toString()}}
\item \href{#method-FormulaCandidate-isValid}{\code{FormulaCandidate$isValid()}}
\item \href{#method-FormulaCandidate-getInvalidFields}{\code{FormulaCandidate$getInvalidFields()}}
\item \href{#method-FormulaCandidate-print}{\code{FormulaCandidate$print()}}
\item \href{#method-FormulaCandidate-clone}{\code{FormulaCandidate$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FormulaCandidate-new"></a>}}
\if{latex}{\out{\hypertarget{method-FormulaCandidate-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new FormulaCandidate class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FormulaCandidate$new(
  formulaId = NULL,
  molecularFormula = NULL,
  adduct = NULL,
  rank = NULL,
  siriusScoreNormalized = NULL,
  siriusScore = NULL,
  isotopeScore = NULL,
  treeScore = NULL,
  zodiacScore = NULL,
  numOfExplainedPeaks = NULL,
  numOfExplainablePeaks = NULL,
  totalExplainedIntensity = NULL,
  medianMassDeviation = NULL,
  fragmentationTree = NULL,
  annotatedSpectrum = NULL,
  isotopePatternAnnotation = NULL,
  lipidAnnotation = NULL,
  predictedFingerprint = NULL,
  compoundClasses = NULL,
  canopusPrediction = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{formulaId}}{Unique identifier of this formula candidate}

\item{\code{molecularFormula}}{molecular formula of this formula candidate}

\item{\code{adduct}}{Adduct of this formula candidate}

\item{\code{rank}}{rank}

\item{\code{siriusScoreNormalized}}{Normalized Sirius Score of the formula candidate.  If NULL result is not available}

\item{\code{siriusScore}}{Sirius Score (isotope + tree score) of the formula candidate.  If NULL result is not available}

\item{\code{isotopeScore}}{isotopeScore}

\item{\code{treeScore}}{treeScore}

\item{\code{zodiacScore}}{Zodiac Score of the formula candidate.  If NULL result is not available}

\item{\code{numOfExplainedPeaks}}{numOfExplainedPeaks}

\item{\code{numOfExplainablePeaks}}{numOfExplainablePeaks}

\item{\code{totalExplainedIntensity}}{totalExplainedIntensity}

\item{\code{medianMassDeviation}}{medianMassDeviation}

\item{\code{fragmentationTree}}{fragmentationTree}

\item{\code{annotatedSpectrum}}{annotatedSpectrum}

\item{\code{isotopePatternAnnotation}}{isotopePatternAnnotation}

\item{\code{lipidAnnotation}}{lipidAnnotation}

\item{\code{predictedFingerprint}}{Probabilistic molecular fingerprint predicted by CSI:FingerID}

\item{\code{compoundClasses}}{compoundClasses}

\item{\code{canopusPrediction}}{canopusPrediction}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FormulaCandidate-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-FormulaCandidate-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
Convert to an R object. This method is deprecated. Use `toSimpleType()` instead.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FormulaCandidate$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FormulaCandidate-toList"></a>}}
\if{latex}{\out{\hypertarget{method-FormulaCandidate-toList}{}}}
\subsection{Method \code{toList()}}{
Convert to a List

Convert the R6 object to a list to work more easily with other tooling.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FormulaCandidate$toList()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
FormulaCandidate as a base R list.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# convert array of FormulaCandidate (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FormulaCandidate-toSimpleType"></a>}}
\if{latex}{\out{\hypertarget{method-FormulaCandidate-toSimpleType}{}}}
\subsection{Method \code{toSimpleType()}}{
Convert FormulaCandidate to a base R type
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FormulaCandidate$toSimpleType()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A base R type, e.g. a list or numeric/character array.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FormulaCandidate-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-FormulaCandidate-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of FormulaCandidate
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FormulaCandidate$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of FormulaCandidate
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FormulaCandidate-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-FormulaCandidate-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FormulaCandidate$toJSONString(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Parameters passed to `jsonlite::toJSON`}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
FormulaCandidate in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FormulaCandidate-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-FormulaCandidate-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of FormulaCandidate
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FormulaCandidate$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of FormulaCandidate
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FormulaCandidate-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-FormulaCandidate-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to FormulaCandidate and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FormulaCandidate$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FormulaCandidate-toString"></a>}}
\if{latex}{\out{\hypertarget{method-FormulaCandidate-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FormulaCandidate$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of FormulaCandidate
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FormulaCandidate-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-FormulaCandidate-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FormulaCandidate$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FormulaCandidate-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-FormulaCandidate-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FormulaCandidate$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FormulaCandidate-print"></a>}}
\if{latex}{\out{\hypertarget{method-FormulaCandidate-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FormulaCandidate$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FormulaCandidate-clone"></a>}}
\if{latex}{\out{\hypertarget{method-FormulaCandidate-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FormulaCandidate$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
