% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/item.R
\docType{class}
\name{Item}
\alias{Item}
\title{Item}
\format{
An \code{R6Class} generator object
}
\description{
Item Class

Item Class
}
\details{
Create a new Item
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{description}}{character [optional]}

\item{\code{quality}}{\link{DataQuality} [optional]}

\item{\code{weight}}{character [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Item-new}{\code{Item$new()}}
\item \href{#method-Item-toJSON}{\code{Item$toJSON()}}
\item \href{#method-Item-fromJSON}{\code{Item$fromJSON()}}
\item \href{#method-Item-toJSONString}{\code{Item$toJSONString()}}
\item \href{#method-Item-fromJSONString}{\code{Item$fromJSONString()}}
\item \href{#method-Item-validateJSON}{\code{Item$validateJSON()}}
\item \href{#method-Item-toString}{\code{Item$toString()}}
\item \href{#method-Item-isValid}{\code{Item$isValid()}}
\item \href{#method-Item-getInvalidFields}{\code{Item$getInvalidFields()}}
\item \href{#method-Item-print}{\code{Item$print()}}
\item \href{#method-Item-clone}{\code{Item$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Item-new"></a>}}
\if{latex}{\out{\hypertarget{method-Item-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new Item class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Item$new(description = NULL, quality = NULL, weight = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{description}}{description}

\item{\code{quality}}{quality}

\item{\code{weight}}{weight}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Item-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Item-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Item$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Item in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Item-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Item-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of Item
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Item$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Item
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Item-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Item-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Item$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Item in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Item-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Item-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of Item
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Item$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Item
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Item-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Item-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to Item and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Item$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Item-toString"></a>}}
\if{latex}{\out{\hypertarget{method-Item-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Item$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of Item
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Item-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-Item-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Item$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Item-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-Item-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Item$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Item-print"></a>}}
\if{latex}{\out{\hypertarget{method-Item-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Item$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Item-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Item-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Item$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
