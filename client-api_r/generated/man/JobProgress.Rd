% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/job_progress.R
\docType{class}
\name{JobProgress}
\alias{JobProgress}
\title{JobProgress}
\format{
An \code{R6Class} generator object
}
\description{
Progress information of a computation job that has already been submitted to SIRIUS.  if  currentProgress == maxProgress job is finished and should change to state done soon.  if a job is DONE all results can be accessed via the Project-Spaces api.

JobProgress Class
}
\details{
Create a new JobProgress
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{indeterminate}}{Is the progress indeterminate or not character [optional]}

\item{\code{state}}{Current state of the Jobs in the SIRIUS internal Job scheduler           WAITING: Waiting for submission to ExecutorService (e.g. due to dependent jobs)          READY: Ready for submission but not yet enqueued for submission to ExecutorService.          QUEUED: Enqueued for submission to ExecutorService.          SUBMITTED: Submitted and waiting to be executed.          RUNNING: Job is running.          CANCELED: Jobs is finished due to cancellation by user or dependent jobs.          FAILED: Job is finished but failed.          DONE: Job finished successfully. character [optional]}

\item{\code{currentProgress}}{Current progress value of the job. integer [optional]}

\item{\code{maxProgress}}{Progress value to reach (might also change during execution) integer [optional]}

\item{\code{message}}{Progress information and warnings. character [optional]}

\item{\code{errorMessage}}{Error message if the job did not finish successfully failed. character [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-JobProgress-new}{\code{JobProgress$new()}}
\item \href{#method-JobProgress-toJSON}{\code{JobProgress$toJSON()}}
\item \href{#method-JobProgress-fromJSON}{\code{JobProgress$fromJSON()}}
\item \href{#method-JobProgress-toJSONString}{\code{JobProgress$toJSONString()}}
\item \href{#method-JobProgress-fromJSONString}{\code{JobProgress$fromJSONString()}}
\item \href{#method-JobProgress-validateJSON}{\code{JobProgress$validateJSON()}}
\item \href{#method-JobProgress-toString}{\code{JobProgress$toString()}}
\item \href{#method-JobProgress-isValid}{\code{JobProgress$isValid()}}
\item \href{#method-JobProgress-getInvalidFields}{\code{JobProgress$getInvalidFields()}}
\item \href{#method-JobProgress-print}{\code{JobProgress$print()}}
\item \href{#method-JobProgress-clone}{\code{JobProgress$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobProgress-new"></a>}}
\if{latex}{\out{\hypertarget{method-JobProgress-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new JobProgress class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobProgress$new(
  indeterminate = NULL,
  state = NULL,
  currentProgress = NULL,
  maxProgress = NULL,
  message = NULL,
  errorMessage = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{indeterminate}}{Is the progress indeterminate or not}

\item{\code{state}}{Current state of the Jobs in the SIRIUS internal Job scheduler           WAITING: Waiting for submission to ExecutorService (e.g. due to dependent jobs)          READY: Ready for submission but not yet enqueued for submission to ExecutorService.          QUEUED: Enqueued for submission to ExecutorService.          SUBMITTED: Submitted and waiting to be executed.          RUNNING: Job is running.          CANCELED: Jobs is finished due to cancellation by user or dependent jobs.          FAILED: Job is finished but failed.          DONE: Job finished successfully.}

\item{\code{currentProgress}}{Current progress value of the job.}

\item{\code{maxProgress}}{Progress value to reach (might also change during execution)}

\item{\code{message}}{Progress information and warnings.}

\item{\code{errorMessage}}{Error message if the job did not finish successfully failed.}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobProgress-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-JobProgress-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobProgress$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
JobProgress in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobProgress-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-JobProgress-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of JobProgress
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobProgress$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of JobProgress
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobProgress-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-JobProgress-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobProgress$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
JobProgress in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobProgress-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-JobProgress-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of JobProgress
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobProgress$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of JobProgress
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobProgress-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-JobProgress-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to JobProgress and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobProgress$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobProgress-toString"></a>}}
\if{latex}{\out{\hypertarget{method-JobProgress-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobProgress$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of JobProgress
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobProgress-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-JobProgress-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobProgress$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobProgress-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-JobProgress-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobProgress$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobProgress-print"></a>}}
\if{latex}{\out{\hypertarget{method-JobProgress-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobProgress$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobProgress-clone"></a>}}
\if{latex}{\out{\hypertarget{method-JobProgress-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobProgress$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
