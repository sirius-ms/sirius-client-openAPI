% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/license_info.R
\docType{class}
\name{LicenseInfo}
\alias{LicenseInfo}
\title{LicenseInfo}
\format{
An \code{R6Class} generator object
}
\description{
LicenseInfo Class

LicenseInfo Class
}
\details{
Create a new LicenseInfo
}
\examples{

## ------------------------------------------------
## Method `LicenseInfo$toList`
## ------------------------------------------------

# convert array of LicenseInfo (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{userEmail}}{Email address of the user account this license information belongs to. character [optional]}

\item{\code{userId}}{User ID (uid) of the user account this license information belongs to. character [optional]}

\item{\code{subscription}}{The active subscription that was used the requested the information \link{Subscription} [optional]}

\item{\code{consumables}}{Status of the consumable resources of the {@link Subscription Subscription}. \link{SubscriptionConsumables} [optional]}

\item{\code{terms}}{list(\link{Term}) [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-LicenseInfo-new}{\code{LicenseInfo$new()}}
\item \href{#method-LicenseInfo-toJSON}{\code{LicenseInfo$toJSON()}}
\item \href{#method-LicenseInfo-toList}{\code{LicenseInfo$toList()}}
\item \href{#method-LicenseInfo-toSimpleType}{\code{LicenseInfo$toSimpleType()}}
\item \href{#method-LicenseInfo-fromJSON}{\code{LicenseInfo$fromJSON()}}
\item \href{#method-LicenseInfo-toJSONString}{\code{LicenseInfo$toJSONString()}}
\item \href{#method-LicenseInfo-fromJSONString}{\code{LicenseInfo$fromJSONString()}}
\item \href{#method-LicenseInfo-validateJSON}{\code{LicenseInfo$validateJSON()}}
\item \href{#method-LicenseInfo-toString}{\code{LicenseInfo$toString()}}
\item \href{#method-LicenseInfo-isValid}{\code{LicenseInfo$isValid()}}
\item \href{#method-LicenseInfo-getInvalidFields}{\code{LicenseInfo$getInvalidFields()}}
\item \href{#method-LicenseInfo-print}{\code{LicenseInfo$print()}}
\item \href{#method-LicenseInfo-clone}{\code{LicenseInfo$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LicenseInfo-new"></a>}}
\if{latex}{\out{\hypertarget{method-LicenseInfo-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new LicenseInfo class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LicenseInfo$new(
  userEmail = NULL,
  userId = NULL,
  subscription = NULL,
  consumables = NULL,
  terms = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{userEmail}}{Email address of the user account this license information belongs to.}

\item{\code{userId}}{User ID (uid) of the user account this license information belongs to.}

\item{\code{subscription}}{The active subscription that was used the requested the information}

\item{\code{consumables}}{Status of the consumable resources of the {@link Subscription Subscription}.}

\item{\code{terms}}{terms}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LicenseInfo-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-LicenseInfo-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
Convert to an R object. This method is deprecated. Use `toSimpleType()` instead.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LicenseInfo$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LicenseInfo-toList"></a>}}
\if{latex}{\out{\hypertarget{method-LicenseInfo-toList}{}}}
\subsection{Method \code{toList()}}{
Convert to a List

Convert the R6 object to a list to work more easily with other tooling.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LicenseInfo$toList()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
LicenseInfo as a base R list.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# convert array of LicenseInfo (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LicenseInfo-toSimpleType"></a>}}
\if{latex}{\out{\hypertarget{method-LicenseInfo-toSimpleType}{}}}
\subsection{Method \code{toSimpleType()}}{
Convert LicenseInfo to a base R type
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LicenseInfo$toSimpleType()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A base R type, e.g. a list or numeric/character array.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LicenseInfo-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-LicenseInfo-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of LicenseInfo
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LicenseInfo$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of LicenseInfo
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LicenseInfo-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-LicenseInfo-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LicenseInfo$toJSONString(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Parameters passed to `jsonlite::toJSON`}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
LicenseInfo in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LicenseInfo-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-LicenseInfo-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of LicenseInfo
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LicenseInfo$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of LicenseInfo
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LicenseInfo-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-LicenseInfo-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to LicenseInfo and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LicenseInfo$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LicenseInfo-toString"></a>}}
\if{latex}{\out{\hypertarget{method-LicenseInfo-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LicenseInfo$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of LicenseInfo
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LicenseInfo-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-LicenseInfo-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LicenseInfo$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LicenseInfo-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-LicenseInfo-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LicenseInfo$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LicenseInfo-print"></a>}}
\if{latex}{\out{\hypertarget{method-LicenseInfo-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LicenseInfo$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LicenseInfo-clone"></a>}}
\if{latex}{\out{\hypertarget{method-LicenseInfo-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LicenseInfo$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
