% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/login_and_account_api.R
\docType{class}
\name{LoginAndAccountApi}
\alias{LoginAndAccountApi}
\title{LoginAndAccount operations}
\format{
An \code{R6Class} generator object
}
\description{
LoginAndAccountApi
}
\details{
SIRIUS Nightsky API

REST API that provides the full functionality of SIRIUS and its web services as background service. It is intended as entry-point for scripting languages and software integration SDKs.This API is exposed by SIRIUS 6

The version of the OpenAPI document: 3.1
Generated by: https://openapi-generator.tech
}
\examples{
\dontrun{
####################  GetAccountInfo  ####################

library(Rsirius)
var_include_subs <- FALSE # character | include available and active subscriptions in {@link AccountInfo AccountInfo}. (Optional)

#Get information about the account currently logged in.
api_instance <- rsirius_api$new()

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$GetAccountInfo(include_subs = var_include_subsdata_file = "result.txt")
result <- api_instance$login_and_account_api$GetAccountInfo(include_subs = var_include_subs)
dput(result)


####################  GetSignUpURL  ####################

library(Rsirius)

#Get SignUp URL (For signUp via web browser)
api_instance <- rsirius_api$new()

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$GetSignUpURL(data_file = "result.txt")
result <- api_instance$login_and_account_api$GetSignUpURL()
dput(result)


####################  GetSubscriptions  ####################

library(Rsirius)

#Get available subscriptions of the account currently logged in.
api_instance <- rsirius_api$new()

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$GetSubscriptions(data_file = "result.txt")
result <- api_instance$login_and_account_api$GetSubscriptions()
dput(result)


####################  IsLoggedIn  ####################

library(Rsirius)

#Check if a user is logged in.
api_instance <- rsirius_api$new()

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$IsLoggedIn(data_file = "result.txt")
result <- api_instance$login_and_account_api$IsLoggedIn()
dput(result)


####################  Login  ####################

library(Rsirius)
var_accept_terms <- "accept_terms_example" # character | 
var_account_credentials <- AccountCredentials$new("username_example", "password_example", "refreshToken_example") # AccountCredentials | used to log in.
var_fail_when_logged_in <- FALSE # character | if true request fails if an active login already exists. (Optional)
var_include_subs <- FALSE # character | include available and active subscriptions in {@link AccountInfo AccountInfo}. (Optional)

#Login into SIRIUS web services and activate default subscription if available.
api_instance <- rsirius_api$new()

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$Login(var_accept_terms, var_account_credentials, fail_when_logged_in = var_fail_when_logged_in, include_subs = var_include_subsdata_file = "result.txt")
result <- api_instance$login_and_account_api$Login(var_accept_terms, var_account_credentials, fail_when_logged_in = var_fail_when_logged_in, include_subs = var_include_subs)
dput(result)


####################  Logout  ####################

library(Rsirius)

#Logout from SIRIUS web services.
api_instance <- rsirius_api$new()

api_instance$login_and_account_api$Logout()


####################  OpenPortal  ####################

library(Rsirius)

#Open User portal in browser.
api_instance <- rsirius_api$new()

api_instance$login_and_account_api$OpenPortal()


####################  SelectSubscription  ####################

library(Rsirius)
var_sid <- "sid_example" # character | 

#Select a subscription as active subscription to be used for computations.
api_instance <- rsirius_api$new()

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$SelectSubscription(var_siddata_file = "result.txt")
result <- api_instance$login_and_account_api$SelectSubscription(var_sid)
dput(result)


####################  SignUp  ####################

library(Rsirius)

#Open SignUp window in system browser and return signUp link.
api_instance <- rsirius_api$new()

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$SignUp(data_file = "result.txt")
result <- api_instance$login_and_account_api$SignUp()
dput(result)


}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{api_client}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-LoginAndAccountApi-new}{\code{LoginAndAccountApi$new()}}
\item \href{#method-LoginAndAccountApi-GetAccountInfo}{\code{LoginAndAccountApi$GetAccountInfo()}}
\item \href{#method-LoginAndAccountApi-GetAccountInfoWithHttpInfo}{\code{LoginAndAccountApi$GetAccountInfoWithHttpInfo()}}
\item \href{#method-LoginAndAccountApi-GetSignUpURL}{\code{LoginAndAccountApi$GetSignUpURL()}}
\item \href{#method-LoginAndAccountApi-GetSignUpURLWithHttpInfo}{\code{LoginAndAccountApi$GetSignUpURLWithHttpInfo()}}
\item \href{#method-LoginAndAccountApi-GetSubscriptions}{\code{LoginAndAccountApi$GetSubscriptions()}}
\item \href{#method-LoginAndAccountApi-GetSubscriptionsWithHttpInfo}{\code{LoginAndAccountApi$GetSubscriptionsWithHttpInfo()}}
\item \href{#method-LoginAndAccountApi-IsLoggedIn}{\code{LoginAndAccountApi$IsLoggedIn()}}
\item \href{#method-LoginAndAccountApi-IsLoggedInWithHttpInfo}{\code{LoginAndAccountApi$IsLoggedInWithHttpInfo()}}
\item \href{#method-LoginAndAccountApi-Login}{\code{LoginAndAccountApi$Login()}}
\item \href{#method-LoginAndAccountApi-LoginWithHttpInfo}{\code{LoginAndAccountApi$LoginWithHttpInfo()}}
\item \href{#method-LoginAndAccountApi-Logout}{\code{LoginAndAccountApi$Logout()}}
\item \href{#method-LoginAndAccountApi-LogoutWithHttpInfo}{\code{LoginAndAccountApi$LogoutWithHttpInfo()}}
\item \href{#method-LoginAndAccountApi-OpenPortal}{\code{LoginAndAccountApi$OpenPortal()}}
\item \href{#method-LoginAndAccountApi-OpenPortalWithHttpInfo}{\code{LoginAndAccountApi$OpenPortalWithHttpInfo()}}
\item \href{#method-LoginAndAccountApi-SelectSubscription}{\code{LoginAndAccountApi$SelectSubscription()}}
\item \href{#method-LoginAndAccountApi-SelectSubscriptionWithHttpInfo}{\code{LoginAndAccountApi$SelectSubscriptionWithHttpInfo()}}
\item \href{#method-LoginAndAccountApi-SignUp}{\code{LoginAndAccountApi$SignUp()}}
\item \href{#method-LoginAndAccountApi-SignUpWithHttpInfo}{\code{LoginAndAccountApi$SignUpWithHttpInfo()}}
\item \href{#method-LoginAndAccountApi-clone}{\code{LoginAndAccountApi$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LoginAndAccountApi-new"></a>}}
\if{latex}{\out{\hypertarget{method-LoginAndAccountApi-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new LoginAndAccountApi.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LoginAndAccountApi$new(api_client)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{api_client}}{An instance of API client.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LoginAndAccountApi-GetAccountInfo"></a>}}
\if{latex}{\out{\hypertarget{method-LoginAndAccountApi-GetAccountInfo}{}}}
\subsection{Method \code{GetAccountInfo()}}{
Get information about the account currently logged in.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LoginAndAccountApi$GetAccountInfo(include_subs = FALSE, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{include_subs}}{(optional) include available and active subscriptions in {@link AccountInfo AccountInfo}. (default value: FALSE)}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
AccountInfo
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LoginAndAccountApi-GetAccountInfoWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-LoginAndAccountApi-GetAccountInfoWithHttpInfo}{}}}
\subsection{Method \code{GetAccountInfoWithHttpInfo()}}{
Get information about the account currently logged in.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LoginAndAccountApi$GetAccountInfoWithHttpInfo(
  include_subs = FALSE,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{include_subs}}{(optional) include available and active subscriptions in {@link AccountInfo AccountInfo}. (default value: FALSE)}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (AccountInfo) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LoginAndAccountApi-GetSignUpURL"></a>}}
\if{latex}{\out{\hypertarget{method-LoginAndAccountApi-GetSignUpURL}{}}}
\subsection{Method \code{GetSignUpURL()}}{
Get SignUp URL (For signUp via web browser)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LoginAndAccountApi$GetSignUpURL(data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
character
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LoginAndAccountApi-GetSignUpURLWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-LoginAndAccountApi-GetSignUpURLWithHttpInfo}{}}}
\subsection{Method \code{GetSignUpURLWithHttpInfo()}}{
Get SignUp URL (For signUp via web browser)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LoginAndAccountApi$GetSignUpURLWithHttpInfo(data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (character) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LoginAndAccountApi-GetSubscriptions"></a>}}
\if{latex}{\out{\hypertarget{method-LoginAndAccountApi-GetSubscriptions}{}}}
\subsection{Method \code{GetSubscriptions()}}{
Get available subscriptions of the account currently logged in.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LoginAndAccountApi$GetSubscriptions(data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
array[Subscription]
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LoginAndAccountApi-GetSubscriptionsWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-LoginAndAccountApi-GetSubscriptionsWithHttpInfo}{}}}
\subsection{Method \code{GetSubscriptionsWithHttpInfo()}}{
Get available subscriptions of the account currently logged in.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LoginAndAccountApi$GetSubscriptionsWithHttpInfo(data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (array[Subscription]) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LoginAndAccountApi-IsLoggedIn"></a>}}
\if{latex}{\out{\hypertarget{method-LoginAndAccountApi-IsLoggedIn}{}}}
\subsection{Method \code{IsLoggedIn()}}{
Check if a user is logged in.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LoginAndAccountApi$IsLoggedIn(data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
character
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LoginAndAccountApi-IsLoggedInWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-LoginAndAccountApi-IsLoggedInWithHttpInfo}{}}}
\subsection{Method \code{IsLoggedInWithHttpInfo()}}{
Check if a user is logged in.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LoginAndAccountApi$IsLoggedInWithHttpInfo(data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (character) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LoginAndAccountApi-Login"></a>}}
\if{latex}{\out{\hypertarget{method-LoginAndAccountApi-Login}{}}}
\subsection{Method \code{Login()}}{
Login into SIRIUS web services and activate default subscription if available.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LoginAndAccountApi$Login(
  accept_terms,
  account_credentials,
  fail_when_logged_in = FALSE,
  include_subs = FALSE,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{accept_terms}}{}

\item{\code{account_credentials}}{used to log in.}

\item{\code{fail_when_logged_in}}{(optional) if true request fails if an active login already exists. (default value: FALSE)}

\item{\code{include_subs}}{(optional) include available and active subscriptions in {@link AccountInfo AccountInfo}. (default value: FALSE)}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
AccountInfo
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LoginAndAccountApi-LoginWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-LoginAndAccountApi-LoginWithHttpInfo}{}}}
\subsection{Method \code{LoginWithHttpInfo()}}{
Login into SIRIUS web services and activate default subscription if available.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LoginAndAccountApi$LoginWithHttpInfo(
  accept_terms,
  account_credentials,
  fail_when_logged_in = FALSE,
  include_subs = FALSE,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{accept_terms}}{}

\item{\code{account_credentials}}{used to log in.}

\item{\code{fail_when_logged_in}}{(optional) if true request fails if an active login already exists. (default value: FALSE)}

\item{\code{include_subs}}{(optional) include available and active subscriptions in {@link AccountInfo AccountInfo}. (default value: FALSE)}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (AccountInfo) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LoginAndAccountApi-Logout"></a>}}
\if{latex}{\out{\hypertarget{method-LoginAndAccountApi-Logout}{}}}
\subsection{Method \code{Logout()}}{
Logout from SIRIUS web services.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LoginAndAccountApi$Logout(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
void
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LoginAndAccountApi-LogoutWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-LoginAndAccountApi-LogoutWithHttpInfo}{}}}
\subsection{Method \code{LogoutWithHttpInfo()}}{
Logout from SIRIUS web services.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LoginAndAccountApi$LogoutWithHttpInfo(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (void) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LoginAndAccountApi-OpenPortal"></a>}}
\if{latex}{\out{\hypertarget{method-LoginAndAccountApi-OpenPortal}{}}}
\subsection{Method \code{OpenPortal()}}{
Open User portal in browser.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LoginAndAccountApi$OpenPortal(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
void
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LoginAndAccountApi-OpenPortalWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-LoginAndAccountApi-OpenPortalWithHttpInfo}{}}}
\subsection{Method \code{OpenPortalWithHttpInfo()}}{
Open User portal in browser.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LoginAndAccountApi$OpenPortalWithHttpInfo(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (void) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LoginAndAccountApi-SelectSubscription"></a>}}
\if{latex}{\out{\hypertarget{method-LoginAndAccountApi-SelectSubscription}{}}}
\subsection{Method \code{SelectSubscription()}}{
Select a subscription as active subscription to be used for computations.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LoginAndAccountApi$SelectSubscription(sid, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sid}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
AccountInfo
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LoginAndAccountApi-SelectSubscriptionWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-LoginAndAccountApi-SelectSubscriptionWithHttpInfo}{}}}
\subsection{Method \code{SelectSubscriptionWithHttpInfo()}}{
Select a subscription as active subscription to be used for computations.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LoginAndAccountApi$SelectSubscriptionWithHttpInfo(sid, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sid}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (AccountInfo) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LoginAndAccountApi-SignUp"></a>}}
\if{latex}{\out{\hypertarget{method-LoginAndAccountApi-SignUp}{}}}
\subsection{Method \code{SignUp()}}{
Open SignUp window in system browser and return signUp link.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LoginAndAccountApi$SignUp(data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
character
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LoginAndAccountApi-SignUpWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-LoginAndAccountApi-SignUpWithHttpInfo}{}}}
\subsection{Method \code{SignUpWithHttpInfo()}}{
Open SignUp window in system browser and return signUp link.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LoginAndAccountApi$SignUpWithHttpInfo(data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (character) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LoginAndAccountApi-clone"></a>}}
\if{latex}{\out{\hypertarget{method-LoginAndAccountApi-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LoginAndAccountApi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
