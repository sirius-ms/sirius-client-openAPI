% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ms_data.R
\docType{class}
\name{MsData}
\alias{MsData}
\title{MsData}
\format{
An \code{R6Class} generator object
}
\description{
The MsData wraps all spectral input data belonging to a (aligned) feature. All spectra fields are optional.  However, at least one Spectrum field needs to be set to create a valid MsData Object.  The different types of spectra fields can be extended to adapt to other MassSpec measurement techniques not covered yet.  <p>  Each Feature can have:  - One extracted isotope pattern (optional)  - One merged MS/MS spectrum (optional)  - One merged MS spectrum (optional)  - many MS/MS spectra (optional)  - many MS spectra (optional)  <p>  Each non-merged spectrum has an index which can be used to access the spectrum.  <p>  In the future we might add some additional information like chromatographic peak or something similar

MsData Class
}
\details{
Create a new MsData
}
\examples{

## ------------------------------------------------
## Method `MsData$toList`
## ------------------------------------------------

# convert array of MsData (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{isotopePattern}}{\link{BasicSpectrum} [optional]}

\item{\code{mergedMs1}}{\link{BasicSpectrum} [optional]}

\item{\code{mergedMs2}}{\link{BasicSpectrum} [optional]}

\item{\code{ms1Spectra}}{list(\link{BasicSpectrum}) [optional]}

\item{\code{ms2Spectra}}{list(\link{BasicSpectrum}) [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-MsData-new}{\code{MsData$new()}}
\item \href{#method-MsData-toJSON}{\code{MsData$toJSON()}}
\item \href{#method-MsData-toList}{\code{MsData$toList()}}
\item \href{#method-MsData-toSimpleType}{\code{MsData$toSimpleType()}}
\item \href{#method-MsData-fromJSON}{\code{MsData$fromJSON()}}
\item \href{#method-MsData-toJSONString}{\code{MsData$toJSONString()}}
\item \href{#method-MsData-fromJSONString}{\code{MsData$fromJSONString()}}
\item \href{#method-MsData-validateJSON}{\code{MsData$validateJSON()}}
\item \href{#method-MsData-toString}{\code{MsData$toString()}}
\item \href{#method-MsData-isValid}{\code{MsData$isValid()}}
\item \href{#method-MsData-getInvalidFields}{\code{MsData$getInvalidFields()}}
\item \href{#method-MsData-print}{\code{MsData$print()}}
\item \href{#method-MsData-clone}{\code{MsData$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MsData-new"></a>}}
\if{latex}{\out{\hypertarget{method-MsData-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new MsData class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MsData$new(
  isotopePattern = NULL,
  mergedMs1 = NULL,
  mergedMs2 = NULL,
  ms1Spectra = NULL,
  ms2Spectra = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{isotopePattern}}{isotopePattern}

\item{\code{mergedMs1}}{mergedMs1}

\item{\code{mergedMs2}}{mergedMs2}

\item{\code{ms1Spectra}}{ms1Spectra}

\item{\code{ms2Spectra}}{ms2Spectra}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MsData-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-MsData-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
Convert to an R object. This method is deprecated. Use `toSimpleType()` instead.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MsData$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MsData-toList"></a>}}
\if{latex}{\out{\hypertarget{method-MsData-toList}{}}}
\subsection{Method \code{toList()}}{
Convert to a List

Convert the R6 object to a list to work more easily with other tooling.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MsData$toList()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
MsData as a base R list.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# convert array of MsData (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MsData-toSimpleType"></a>}}
\if{latex}{\out{\hypertarget{method-MsData-toSimpleType}{}}}
\subsection{Method \code{toSimpleType()}}{
Convert MsData to a base R type
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MsData$toSimpleType()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A base R type, e.g. a list or numeric/character array.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MsData-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-MsData-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of MsData
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MsData$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of MsData
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MsData-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-MsData-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MsData$toJSONString(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Parameters passed to `jsonlite::toJSON`}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
MsData in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MsData-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-MsData-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of MsData
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MsData$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of MsData
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MsData-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-MsData-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to MsData and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MsData$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MsData-toString"></a>}}
\if{latex}{\out{\hypertarget{method-MsData-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MsData$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of MsData
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MsData-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-MsData-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MsData$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MsData-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-MsData-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MsData$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MsData-print"></a>}}
\if{latex}{\out{\hypertarget{method-MsData-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MsData$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MsData-clone"></a>}}
\if{latex}{\out{\hypertarget{method-MsData-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MsData$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
