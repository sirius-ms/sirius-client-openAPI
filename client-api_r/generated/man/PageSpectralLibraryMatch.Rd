% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/page_spectral_library_match.R
\docType{class}
\name{PageSpectralLibraryMatch}
\alias{PageSpectralLibraryMatch}
\title{PageSpectralLibraryMatch}
\format{
An \code{R6Class} generator object
}
\description{
PageSpectralLibraryMatch Class

PageSpectralLibraryMatch Class
}
\details{
Create a new PageSpectralLibraryMatch
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{totalPages}}{integer [optional]}

\item{\code{totalElements}}{integer [optional]}

\item{\code{first}}{character [optional]}

\item{\code{size}}{integer [optional]}

\item{\code{content}}{list(\link{SpectralLibraryMatch}) [optional]}

\item{\code{number}}{integer [optional]}

\item{\code{sort}}{\link{SortObject} [optional]}

\item{\code{last}}{character [optional]}

\item{\code{numberOfElements}}{integer [optional]}

\item{\code{pageable}}{\link{PageableObject} [optional]}

\item{\code{empty}}{character [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-PageSpectralLibraryMatch-new}{\code{PageSpectralLibraryMatch$new()}}
\item \href{#method-PageSpectralLibraryMatch-toJSON}{\code{PageSpectralLibraryMatch$toJSON()}}
\item \href{#method-PageSpectralLibraryMatch-fromJSON}{\code{PageSpectralLibraryMatch$fromJSON()}}
\item \href{#method-PageSpectralLibraryMatch-toJSONString}{\code{PageSpectralLibraryMatch$toJSONString()}}
\item \href{#method-PageSpectralLibraryMatch-fromJSONString}{\code{PageSpectralLibraryMatch$fromJSONString()}}
\item \href{#method-PageSpectralLibraryMatch-validateJSON}{\code{PageSpectralLibraryMatch$validateJSON()}}
\item \href{#method-PageSpectralLibraryMatch-toString}{\code{PageSpectralLibraryMatch$toString()}}
\item \href{#method-PageSpectralLibraryMatch-isValid}{\code{PageSpectralLibraryMatch$isValid()}}
\item \href{#method-PageSpectralLibraryMatch-getInvalidFields}{\code{PageSpectralLibraryMatch$getInvalidFields()}}
\item \href{#method-PageSpectralLibraryMatch-print}{\code{PageSpectralLibraryMatch$print()}}
\item \href{#method-PageSpectralLibraryMatch-clone}{\code{PageSpectralLibraryMatch$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PageSpectralLibraryMatch-new"></a>}}
\if{latex}{\out{\hypertarget{method-PageSpectralLibraryMatch-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new PageSpectralLibraryMatch class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PageSpectralLibraryMatch$new(
  totalPages = NULL,
  totalElements = NULL,
  first = NULL,
  size = NULL,
  content = NULL,
  number = NULL,
  sort = NULL,
  last = NULL,
  numberOfElements = NULL,
  pageable = NULL,
  empty = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{totalPages}}{totalPages}

\item{\code{totalElements}}{totalElements}

\item{\code{first}}{first}

\item{\code{size}}{size}

\item{\code{content}}{content}

\item{\code{number}}{number}

\item{\code{sort}}{sort}

\item{\code{last}}{last}

\item{\code{numberOfElements}}{numberOfElements}

\item{\code{pageable}}{pageable}

\item{\code{empty}}{empty}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PageSpectralLibraryMatch-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PageSpectralLibraryMatch-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PageSpectralLibraryMatch$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
PageSpectralLibraryMatch in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PageSpectralLibraryMatch-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PageSpectralLibraryMatch-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of PageSpectralLibraryMatch
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PageSpectralLibraryMatch$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of PageSpectralLibraryMatch
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PageSpectralLibraryMatch-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-PageSpectralLibraryMatch-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PageSpectralLibraryMatch$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
PageSpectralLibraryMatch in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PageSpectralLibraryMatch-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-PageSpectralLibraryMatch-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of PageSpectralLibraryMatch
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PageSpectralLibraryMatch$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of PageSpectralLibraryMatch
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PageSpectralLibraryMatch-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PageSpectralLibraryMatch-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to PageSpectralLibraryMatch and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PageSpectralLibraryMatch$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PageSpectralLibraryMatch-toString"></a>}}
\if{latex}{\out{\hypertarget{method-PageSpectralLibraryMatch-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PageSpectralLibraryMatch$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of PageSpectralLibraryMatch
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PageSpectralLibraryMatch-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-PageSpectralLibraryMatch-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PageSpectralLibraryMatch$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PageSpectralLibraryMatch-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-PageSpectralLibraryMatch-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PageSpectralLibraryMatch$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PageSpectralLibraryMatch-print"></a>}}
\if{latex}{\out{\hypertarget{method-PageSpectralLibraryMatch-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PageSpectralLibraryMatch$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PageSpectralLibraryMatch-clone"></a>}}
\if{latex}{\out{\hypertarget{method-PageSpectralLibraryMatch-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PageSpectralLibraryMatch$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
