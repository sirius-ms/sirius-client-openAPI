% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pageable_object.R
\docType{class}
\name{PageableObject}
\alias{PageableObject}
\title{PageableObject}
\format{
An \code{R6Class} generator object
}
\description{
PageableObject Class

PageableObject Class
}
\details{
Create a new PageableObject
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{offset}}{integer [optional]}

\item{\code{sort}}{\link{SortObject} [optional]}

\item{\code{pageNumber}}{integer [optional]}

\item{\code{pageSize}}{integer [optional]}

\item{\code{paged}}{character [optional]}

\item{\code{unpaged}}{character [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-PageableObject-new}{\code{PageableObject$new()}}
\item \href{#method-PageableObject-toJSON}{\code{PageableObject$toJSON()}}
\item \href{#method-PageableObject-fromJSON}{\code{PageableObject$fromJSON()}}
\item \href{#method-PageableObject-toJSONString}{\code{PageableObject$toJSONString()}}
\item \href{#method-PageableObject-fromJSONString}{\code{PageableObject$fromJSONString()}}
\item \href{#method-PageableObject-validateJSON}{\code{PageableObject$validateJSON()}}
\item \href{#method-PageableObject-toString}{\code{PageableObject$toString()}}
\item \href{#method-PageableObject-isValid}{\code{PageableObject$isValid()}}
\item \href{#method-PageableObject-getInvalidFields}{\code{PageableObject$getInvalidFields()}}
\item \href{#method-PageableObject-print}{\code{PageableObject$print()}}
\item \href{#method-PageableObject-clone}{\code{PageableObject$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PageableObject-new"></a>}}
\if{latex}{\out{\hypertarget{method-PageableObject-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new PageableObject class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PageableObject$new(
  offset = NULL,
  sort = NULL,
  pageNumber = NULL,
  pageSize = NULL,
  paged = NULL,
  unpaged = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{offset}}{offset}

\item{\code{sort}}{sort}

\item{\code{pageNumber}}{pageNumber}

\item{\code{pageSize}}{pageSize}

\item{\code{paged}}{paged}

\item{\code{unpaged}}{unpaged}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PageableObject-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PageableObject-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PageableObject$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
PageableObject in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PageableObject-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PageableObject-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of PageableObject
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PageableObject$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of PageableObject
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PageableObject-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-PageableObject-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PageableObject$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
PageableObject in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PageableObject-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-PageableObject-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of PageableObject
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PageableObject$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of PageableObject
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PageableObject-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PageableObject-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to PageableObject and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PageableObject$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PageableObject-toString"></a>}}
\if{latex}{\out{\hypertarget{method-PageableObject-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PageableObject$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of PageableObject
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PageableObject-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-PageableObject-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PageableObject$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PageableObject-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-PageableObject-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PageableObject$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PageableObject-print"></a>}}
\if{latex}{\out{\hypertarget{method-PageableObject-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PageableObject$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PageableObject-clone"></a>}}
\if{latex}{\out{\hypertarget{method-PageableObject-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PageableObject$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
