% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/paged_model_compound.R
\docType{class}
\name{PagedModelCompound}
\alias{PagedModelCompound}
\title{PagedModelCompound}
\format{
An \code{R6Class} generator object
}
\description{
PagedModelCompound Class

PagedModelCompound Class
}
\details{
Create a new PagedModelCompound
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{content}}{list(\link{Compound}) [optional]}

\item{\code{page}}{\link{PageMetadata} [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-PagedModelCompound-new}{\code{PagedModelCompound$new()}}
\item \href{#method-PagedModelCompound-toJSON}{\code{PagedModelCompound$toJSON()}}
\item \href{#method-PagedModelCompound-fromJSON}{\code{PagedModelCompound$fromJSON()}}
\item \href{#method-PagedModelCompound-toJSONString}{\code{PagedModelCompound$toJSONString()}}
\item \href{#method-PagedModelCompound-fromJSONString}{\code{PagedModelCompound$fromJSONString()}}
\item \href{#method-PagedModelCompound-validateJSON}{\code{PagedModelCompound$validateJSON()}}
\item \href{#method-PagedModelCompound-toString}{\code{PagedModelCompound$toString()}}
\item \href{#method-PagedModelCompound-isValid}{\code{PagedModelCompound$isValid()}}
\item \href{#method-PagedModelCompound-getInvalidFields}{\code{PagedModelCompound$getInvalidFields()}}
\item \href{#method-PagedModelCompound-print}{\code{PagedModelCompound$print()}}
\item \href{#method-PagedModelCompound-clone}{\code{PagedModelCompound$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PagedModelCompound-new"></a>}}
\if{latex}{\out{\hypertarget{method-PagedModelCompound-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new PagedModelCompound class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PagedModelCompound$new(content = NULL, page = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{content}}{content}

\item{\code{page}}{page}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PagedModelCompound-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PagedModelCompound-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PagedModelCompound$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
PagedModelCompound in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PagedModelCompound-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PagedModelCompound-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of PagedModelCompound
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PagedModelCompound$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of PagedModelCompound
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PagedModelCompound-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-PagedModelCompound-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PagedModelCompound$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
PagedModelCompound in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PagedModelCompound-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-PagedModelCompound-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of PagedModelCompound
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PagedModelCompound$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of PagedModelCompound
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PagedModelCompound-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PagedModelCompound-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to PagedModelCompound and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PagedModelCompound$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PagedModelCompound-toString"></a>}}
\if{latex}{\out{\hypertarget{method-PagedModelCompound-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PagedModelCompound$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of PagedModelCompound
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PagedModelCompound-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-PagedModelCompound-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PagedModelCompound$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PagedModelCompound-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-PagedModelCompound-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PagedModelCompound$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PagedModelCompound-print"></a>}}
\if{latex}{\out{\hypertarget{method-PagedModelCompound-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PagedModelCompound$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PagedModelCompound-clone"></a>}}
\if{latex}{\out{\hypertarget{method-PagedModelCompound-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PagedModelCompound$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
