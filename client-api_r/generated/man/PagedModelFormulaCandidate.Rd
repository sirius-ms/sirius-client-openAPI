% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/paged_model_formula_candidate.R
\docType{class}
\name{PagedModelFormulaCandidate}
\alias{PagedModelFormulaCandidate}
\title{PagedModelFormulaCandidate}
\format{
An \code{R6Class} generator object
}
\description{
PagedModelFormulaCandidate Class

PagedModelFormulaCandidate Class
}
\details{
Create a new PagedModelFormulaCandidate
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{content}}{list(\link{FormulaCandidate}) [optional]}

\item{\code{page}}{\link{PageMetadata} [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-PagedModelFormulaCandidate-new}{\code{PagedModelFormulaCandidate$new()}}
\item \href{#method-PagedModelFormulaCandidate-toJSON}{\code{PagedModelFormulaCandidate$toJSON()}}
\item \href{#method-PagedModelFormulaCandidate-fromJSON}{\code{PagedModelFormulaCandidate$fromJSON()}}
\item \href{#method-PagedModelFormulaCandidate-toJSONString}{\code{PagedModelFormulaCandidate$toJSONString()}}
\item \href{#method-PagedModelFormulaCandidate-fromJSONString}{\code{PagedModelFormulaCandidate$fromJSONString()}}
\item \href{#method-PagedModelFormulaCandidate-validateJSON}{\code{PagedModelFormulaCandidate$validateJSON()}}
\item \href{#method-PagedModelFormulaCandidate-toString}{\code{PagedModelFormulaCandidate$toString()}}
\item \href{#method-PagedModelFormulaCandidate-isValid}{\code{PagedModelFormulaCandidate$isValid()}}
\item \href{#method-PagedModelFormulaCandidate-getInvalidFields}{\code{PagedModelFormulaCandidate$getInvalidFields()}}
\item \href{#method-PagedModelFormulaCandidate-print}{\code{PagedModelFormulaCandidate$print()}}
\item \href{#method-PagedModelFormulaCandidate-clone}{\code{PagedModelFormulaCandidate$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PagedModelFormulaCandidate-new"></a>}}
\if{latex}{\out{\hypertarget{method-PagedModelFormulaCandidate-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new PagedModelFormulaCandidate class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PagedModelFormulaCandidate$new(content = NULL, page = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{content}}{content}

\item{\code{page}}{page}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PagedModelFormulaCandidate-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PagedModelFormulaCandidate-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PagedModelFormulaCandidate$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
PagedModelFormulaCandidate in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PagedModelFormulaCandidate-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PagedModelFormulaCandidate-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of PagedModelFormulaCandidate
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PagedModelFormulaCandidate$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of PagedModelFormulaCandidate
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PagedModelFormulaCandidate-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-PagedModelFormulaCandidate-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PagedModelFormulaCandidate$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
PagedModelFormulaCandidate in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PagedModelFormulaCandidate-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-PagedModelFormulaCandidate-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of PagedModelFormulaCandidate
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PagedModelFormulaCandidate$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of PagedModelFormulaCandidate
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PagedModelFormulaCandidate-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PagedModelFormulaCandidate-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to PagedModelFormulaCandidate and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PagedModelFormulaCandidate$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PagedModelFormulaCandidate-toString"></a>}}
\if{latex}{\out{\hypertarget{method-PagedModelFormulaCandidate-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PagedModelFormulaCandidate$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of PagedModelFormulaCandidate
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PagedModelFormulaCandidate-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-PagedModelFormulaCandidate-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PagedModelFormulaCandidate$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PagedModelFormulaCandidate-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-PagedModelFormulaCandidate-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PagedModelFormulaCandidate$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PagedModelFormulaCandidate-print"></a>}}
\if{latex}{\out{\hypertarget{method-PagedModelFormulaCandidate-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PagedModelFormulaCandidate$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PagedModelFormulaCandidate-clone"></a>}}
\if{latex}{\out{\hypertarget{method-PagedModelFormulaCandidate-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PagedModelFormulaCandidate$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
