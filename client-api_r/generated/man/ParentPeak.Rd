% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parent_peak.R
\docType{class}
\name{ParentPeak}
\alias{ParentPeak}
\title{ParentPeak}
\format{
An \code{R6Class} generator object
}
\description{
Link from annotated fragment peak to its parent fragment peak connected by their neutral loss.

ParentPeak Class
}
\details{
Create a new ParentPeak
}
\examples{

## ------------------------------------------------
## Method `ParentPeak$toList`
## ------------------------------------------------

# convert array of ParentPeak (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{parentIdx}}{Index to the parent peak connected by this loss in this particular spectrum integer}

\item{\code{parentFragmentId}}{Identifier of the parent fragment connected via this loss. Can be used to map fragments and peaks  among fragmentation trees and spectra. integer}

\item{\code{lossFormula}}{Molecular formula of the neutral loss that connects these two peaks. character}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ParentPeak-new}{\code{ParentPeak$new()}}
\item \href{#method-ParentPeak-toJSON}{\code{ParentPeak$toJSON()}}
\item \href{#method-ParentPeak-toList}{\code{ParentPeak$toList()}}
\item \href{#method-ParentPeak-toSimpleType}{\code{ParentPeak$toSimpleType()}}
\item \href{#method-ParentPeak-fromJSON}{\code{ParentPeak$fromJSON()}}
\item \href{#method-ParentPeak-toJSONString}{\code{ParentPeak$toJSONString()}}
\item \href{#method-ParentPeak-fromJSONString}{\code{ParentPeak$fromJSONString()}}
\item \href{#method-ParentPeak-validateJSON}{\code{ParentPeak$validateJSON()}}
\item \href{#method-ParentPeak-toString}{\code{ParentPeak$toString()}}
\item \href{#method-ParentPeak-isValid}{\code{ParentPeak$isValid()}}
\item \href{#method-ParentPeak-getInvalidFields}{\code{ParentPeak$getInvalidFields()}}
\item \href{#method-ParentPeak-print}{\code{ParentPeak$print()}}
\item \href{#method-ParentPeak-clone}{\code{ParentPeak$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ParentPeak-new"></a>}}
\if{latex}{\out{\hypertarget{method-ParentPeak-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new ParentPeak class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ParentPeak$new(parentIdx, parentFragmentId, lossFormula, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{parentIdx}}{Index to the parent peak connected by this loss in this particular spectrum}

\item{\code{parentFragmentId}}{Identifier of the parent fragment connected via this loss. Can be used to map fragments and peaks  among fragmentation trees and spectra.}

\item{\code{lossFormula}}{Molecular formula of the neutral loss that connects these two peaks.}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ParentPeak-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ParentPeak-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
Convert to an R object. This method is deprecated. Use `toSimpleType()` instead.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ParentPeak$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ParentPeak-toList"></a>}}
\if{latex}{\out{\hypertarget{method-ParentPeak-toList}{}}}
\subsection{Method \code{toList()}}{
Convert to a List

Convert the R6 object to a list to work more easily with other tooling.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ParentPeak$toList()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
ParentPeak as a base R list.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# convert array of ParentPeak (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ParentPeak-toSimpleType"></a>}}
\if{latex}{\out{\hypertarget{method-ParentPeak-toSimpleType}{}}}
\subsection{Method \code{toSimpleType()}}{
Convert ParentPeak to a base R type
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ParentPeak$toSimpleType()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A base R type, e.g. a list or numeric/character array.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ParentPeak-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ParentPeak-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of ParentPeak
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ParentPeak$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of ParentPeak
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ParentPeak-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-ParentPeak-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ParentPeak$toJSONString(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Parameters passed to `jsonlite::toJSON`}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
ParentPeak in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ParentPeak-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-ParentPeak-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of ParentPeak
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ParentPeak$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of ParentPeak
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ParentPeak-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ParentPeak-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to ParentPeak and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ParentPeak$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ParentPeak-toString"></a>}}
\if{latex}{\out{\hypertarget{method-ParentPeak-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ParentPeak$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of ParentPeak
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ParentPeak-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-ParentPeak-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ParentPeak$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ParentPeak-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-ParentPeak-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ParentPeak$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ParentPeak-print"></a>}}
\if{latex}{\out{\hypertarget{method-ParentPeak-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ParentPeak$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ParentPeak-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ParentPeak-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ParentPeak$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
