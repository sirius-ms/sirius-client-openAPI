% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/project_info.R
\docType{class}
\name{ProjectInfo}
\alias{ProjectInfo}
\title{ProjectInfo}
\format{
An \code{R6Class} generator object
}
\description{
ProjectInfo Class

ProjectInfo Class
}
\details{
Create a new ProjectInfo
}
\examples{

## ------------------------------------------------
## Method `ProjectInfo$toList`
## ------------------------------------------------

# convert array of ProjectInfo (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{projectId}}{a user selected unique name of the project for easy access. character [optional]}

\item{\code{location}}{storage location of the project. character [optional]}

\item{\code{description}}{Description of this project. character [optional]}

\item{\code{type}}{Type of this project.  NULL if project type has not yet been specified by importing data. character [optional]}

\item{\code{compatible}}{Indicates whether computed results (e.g. fingerprints, compounds classes) are compatible with the backend.  If true project is up-to-date and there are no restrictions regarding usage.  If false project is incompatible and therefore \"read only\" until the incompatible results have been removed. See updateProject endpoint for further information  If NULL the information has not been requested. character [optional]}

\item{\code{numOfFeatures}}{Number of features (aligned over runs) in this project. If NULL, information has not been requested (See OptField 'sizeInformation'). integer [optional]}

\item{\code{numOfCompounds}}{Number of compounds (group of ion identities) in this project. If NULL, Information has not been requested (See OptField 'sizeInformation') or might be unavailable for this project type. integer [optional]}

\item{\code{numOfBytes}}{Size in Bytes this project consumes on disk If NULL, Information has not been requested (See OptField 'sizeInformation'). integer [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ProjectInfo-new}{\code{ProjectInfo$new()}}
\item \href{#method-ProjectInfo-toJSON}{\code{ProjectInfo$toJSON()}}
\item \href{#method-ProjectInfo-toList}{\code{ProjectInfo$toList()}}
\item \href{#method-ProjectInfo-toSimpleType}{\code{ProjectInfo$toSimpleType()}}
\item \href{#method-ProjectInfo-fromJSON}{\code{ProjectInfo$fromJSON()}}
\item \href{#method-ProjectInfo-toJSONString}{\code{ProjectInfo$toJSONString()}}
\item \href{#method-ProjectInfo-fromJSONString}{\code{ProjectInfo$fromJSONString()}}
\item \href{#method-ProjectInfo-validateJSON}{\code{ProjectInfo$validateJSON()}}
\item \href{#method-ProjectInfo-toString}{\code{ProjectInfo$toString()}}
\item \href{#method-ProjectInfo-isValid}{\code{ProjectInfo$isValid()}}
\item \href{#method-ProjectInfo-getInvalidFields}{\code{ProjectInfo$getInvalidFields()}}
\item \href{#method-ProjectInfo-print}{\code{ProjectInfo$print()}}
\item \href{#method-ProjectInfo-clone}{\code{ProjectInfo$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProjectInfo-new"></a>}}
\if{latex}{\out{\hypertarget{method-ProjectInfo-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new ProjectInfo class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProjectInfo$new(
  projectId = NULL,
  location = NULL,
  description = NULL,
  type = NULL,
  compatible = NULL,
  numOfFeatures = NULL,
  numOfCompounds = NULL,
  numOfBytes = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{projectId}}{a user selected unique name of the project for easy access.}

\item{\code{location}}{storage location of the project.}

\item{\code{description}}{Description of this project.}

\item{\code{type}}{Type of this project.  NULL if project type has not yet been specified by importing data.}

\item{\code{compatible}}{Indicates whether computed results (e.g. fingerprints, compounds classes) are compatible with the backend.  If true project is up-to-date and there are no restrictions regarding usage.  If false project is incompatible and therefore \"read only\" until the incompatible results have been removed. See updateProject endpoint for further information  If NULL the information has not been requested.}

\item{\code{numOfFeatures}}{Number of features (aligned over runs) in this project. If NULL, information has not been requested (See OptField 'sizeInformation').}

\item{\code{numOfCompounds}}{Number of compounds (group of ion identities) in this project. If NULL, Information has not been requested (See OptField 'sizeInformation') or might be unavailable for this project type.}

\item{\code{numOfBytes}}{Size in Bytes this project consumes on disk If NULL, Information has not been requested (See OptField 'sizeInformation').}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProjectInfo-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ProjectInfo-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
Convert to an R object. This method is deprecated. Use `toSimpleType()` instead.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProjectInfo$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProjectInfo-toList"></a>}}
\if{latex}{\out{\hypertarget{method-ProjectInfo-toList}{}}}
\subsection{Method \code{toList()}}{
Convert to a List

Convert the R6 object to a list to work more easily with other tooling.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProjectInfo$toList()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
ProjectInfo as a base R list.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# convert array of ProjectInfo (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProjectInfo-toSimpleType"></a>}}
\if{latex}{\out{\hypertarget{method-ProjectInfo-toSimpleType}{}}}
\subsection{Method \code{toSimpleType()}}{
Convert ProjectInfo to a base R type
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProjectInfo$toSimpleType()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A base R type, e.g. a list or numeric/character array.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProjectInfo-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ProjectInfo-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of ProjectInfo
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProjectInfo$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of ProjectInfo
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProjectInfo-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-ProjectInfo-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProjectInfo$toJSONString(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Parameters passed to `jsonlite::toJSON`}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
ProjectInfo in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProjectInfo-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-ProjectInfo-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of ProjectInfo
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProjectInfo$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of ProjectInfo
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProjectInfo-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ProjectInfo-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to ProjectInfo and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProjectInfo$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProjectInfo-toString"></a>}}
\if{latex}{\out{\hypertarget{method-ProjectInfo-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProjectInfo$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of ProjectInfo
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProjectInfo-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-ProjectInfo-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProjectInfo$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProjectInfo-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-ProjectInfo-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProjectInfo$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProjectInfo-print"></a>}}
\if{latex}{\out{\hypertarget{method-ProjectInfo-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProjectInfo$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProjectInfo-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ProjectInfo-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProjectInfo$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
