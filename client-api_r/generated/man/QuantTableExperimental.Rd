% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/quant_table_experimental.R
\docType{class}
\name{QuantTableExperimental}
\alias{QuantTableExperimental}
\title{QuantTableExperimental}
\format{
An \code{R6Class} generator object
}
\description{
EXPERIMENTAL: This schema is experimental and may be changed (or even removed) without notice until it is declared stable.

QuantTableExperimental Class
}
\details{
Create a new QuantTableExperimental
}
\examples{

## ------------------------------------------------
## Method `QuantTableExperimental$toList`
## ------------------------------------------------

# convert array of QuantTableExperimental (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{quantificationMeasure}}{character [optional]}

\item{\code{rowType}}{character [optional]}

\item{\code{rowIds}}{list(integer) [optional]}

\item{\code{columnIds}}{list(integer) [optional]}

\item{\code{rowNames}}{list(character) [optional]}

\item{\code{columnNames}}{list(character) [optional]}

\item{\code{values}}{list(list(numeric)) [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-QuantTableExperimental-new}{\code{QuantTableExperimental$new()}}
\item \href{#method-QuantTableExperimental-toJSON}{\code{QuantTableExperimental$toJSON()}}
\item \href{#method-QuantTableExperimental-toList}{\code{QuantTableExperimental$toList()}}
\item \href{#method-QuantTableExperimental-toSimpleType}{\code{QuantTableExperimental$toSimpleType()}}
\item \href{#method-QuantTableExperimental-fromJSON}{\code{QuantTableExperimental$fromJSON()}}
\item \href{#method-QuantTableExperimental-toJSONString}{\code{QuantTableExperimental$toJSONString()}}
\item \href{#method-QuantTableExperimental-fromJSONString}{\code{QuantTableExperimental$fromJSONString()}}
\item \href{#method-QuantTableExperimental-validateJSON}{\code{QuantTableExperimental$validateJSON()}}
\item \href{#method-QuantTableExperimental-toString}{\code{QuantTableExperimental$toString()}}
\item \href{#method-QuantTableExperimental-isValid}{\code{QuantTableExperimental$isValid()}}
\item \href{#method-QuantTableExperimental-getInvalidFields}{\code{QuantTableExperimental$getInvalidFields()}}
\item \href{#method-QuantTableExperimental-print}{\code{QuantTableExperimental$print()}}
\item \href{#method-QuantTableExperimental-clone}{\code{QuantTableExperimental$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-QuantTableExperimental-new"></a>}}
\if{latex}{\out{\hypertarget{method-QuantTableExperimental-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new QuantTableExperimental class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{QuantTableExperimental$new(
  quantificationMeasure = NULL,
  rowType = NULL,
  rowIds = NULL,
  columnIds = NULL,
  rowNames = NULL,
  columnNames = NULL,
  values = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{quantificationMeasure}}{quantificationMeasure}

\item{\code{rowType}}{rowType}

\item{\code{rowIds}}{rowIds}

\item{\code{columnIds}}{columnIds}

\item{\code{rowNames}}{rowNames}

\item{\code{columnNames}}{columnNames}

\item{\code{values}}{values}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-QuantTableExperimental-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-QuantTableExperimental-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
Convert to an R object. This method is deprecated. Use `toSimpleType()` instead.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{QuantTableExperimental$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-QuantTableExperimental-toList"></a>}}
\if{latex}{\out{\hypertarget{method-QuantTableExperimental-toList}{}}}
\subsection{Method \code{toList()}}{
Convert to a List

Convert the R6 object to a list to work more easily with other tooling.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{QuantTableExperimental$toList()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
QuantTableExperimental as a base R list.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# convert array of QuantTableExperimental (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-QuantTableExperimental-toSimpleType"></a>}}
\if{latex}{\out{\hypertarget{method-QuantTableExperimental-toSimpleType}{}}}
\subsection{Method \code{toSimpleType()}}{
Convert QuantTableExperimental to a base R type
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{QuantTableExperimental$toSimpleType()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A base R type, e.g. a list or numeric/character array.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-QuantTableExperimental-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-QuantTableExperimental-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of QuantTableExperimental
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{QuantTableExperimental$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of QuantTableExperimental
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-QuantTableExperimental-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-QuantTableExperimental-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{QuantTableExperimental$toJSONString(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Parameters passed to `jsonlite::toJSON`}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
QuantTableExperimental in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-QuantTableExperimental-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-QuantTableExperimental-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of QuantTableExperimental
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{QuantTableExperimental$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of QuantTableExperimental
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-QuantTableExperimental-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-QuantTableExperimental-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to QuantTableExperimental and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{QuantTableExperimental$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-QuantTableExperimental-toString"></a>}}
\if{latex}{\out{\hypertarget{method-QuantTableExperimental-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{QuantTableExperimental$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of QuantTableExperimental
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-QuantTableExperimental-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-QuantTableExperimental-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{QuantTableExperimental$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-QuantTableExperimental-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-QuantTableExperimental-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{QuantTableExperimental$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-QuantTableExperimental-print"></a>}}
\if{latex}{\out{\hypertarget{method-QuantTableExperimental-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{QuantTableExperimental$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-QuantTableExperimental-clone"></a>}}
\if{latex}{\out{\hypertarget{method-QuantTableExperimental-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{QuantTableExperimental$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
