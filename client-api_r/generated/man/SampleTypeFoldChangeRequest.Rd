% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sample_type_fold_change_request.R
\docType{class}
\name{SampleTypeFoldChangeRequest}
\alias{SampleTypeFoldChangeRequest}
\title{SampleTypeFoldChangeRequest}
\format{
An \code{R6Class} generator object
}
\description{
SampleTypeFoldChangeRequest Class

SampleTypeFoldChangeRequest Class
}
\details{
Create a new SampleTypeFoldChangeRequest
}
\examples{

## ------------------------------------------------
## Method `SampleTypeFoldChangeRequest$toList`
## ------------------------------------------------

# convert array of SampleTypeFoldChangeRequest (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{sampleRunIds}}{list(character) [optional]}

\item{\code{blankRunIds}}{list(character) [optional]}

\item{\code{controlRunIds}}{list(character) [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-SampleTypeFoldChangeRequest-new}{\code{SampleTypeFoldChangeRequest$new()}}
\item \href{#method-SampleTypeFoldChangeRequest-toJSON}{\code{SampleTypeFoldChangeRequest$toJSON()}}
\item \href{#method-SampleTypeFoldChangeRequest-toList}{\code{SampleTypeFoldChangeRequest$toList()}}
\item \href{#method-SampleTypeFoldChangeRequest-toSimpleType}{\code{SampleTypeFoldChangeRequest$toSimpleType()}}
\item \href{#method-SampleTypeFoldChangeRequest-fromJSON}{\code{SampleTypeFoldChangeRequest$fromJSON()}}
\item \href{#method-SampleTypeFoldChangeRequest-toJSONString}{\code{SampleTypeFoldChangeRequest$toJSONString()}}
\item \href{#method-SampleTypeFoldChangeRequest-fromJSONString}{\code{SampleTypeFoldChangeRequest$fromJSONString()}}
\item \href{#method-SampleTypeFoldChangeRequest-validateJSON}{\code{SampleTypeFoldChangeRequest$validateJSON()}}
\item \href{#method-SampleTypeFoldChangeRequest-toString}{\code{SampleTypeFoldChangeRequest$toString()}}
\item \href{#method-SampleTypeFoldChangeRequest-isValid}{\code{SampleTypeFoldChangeRequest$isValid()}}
\item \href{#method-SampleTypeFoldChangeRequest-getInvalidFields}{\code{SampleTypeFoldChangeRequest$getInvalidFields()}}
\item \href{#method-SampleTypeFoldChangeRequest-print}{\code{SampleTypeFoldChangeRequest$print()}}
\item \href{#method-SampleTypeFoldChangeRequest-clone}{\code{SampleTypeFoldChangeRequest$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SampleTypeFoldChangeRequest-new"></a>}}
\if{latex}{\out{\hypertarget{method-SampleTypeFoldChangeRequest-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new SampleTypeFoldChangeRequest class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SampleTypeFoldChangeRequest$new(
  sampleRunIds = NULL,
  blankRunIds = NULL,
  controlRunIds = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sampleRunIds}}{sampleRunIds}

\item{\code{blankRunIds}}{blankRunIds}

\item{\code{controlRunIds}}{controlRunIds}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SampleTypeFoldChangeRequest-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-SampleTypeFoldChangeRequest-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
Convert to an R object. This method is deprecated. Use `toSimpleType()` instead.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SampleTypeFoldChangeRequest$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SampleTypeFoldChangeRequest-toList"></a>}}
\if{latex}{\out{\hypertarget{method-SampleTypeFoldChangeRequest-toList}{}}}
\subsection{Method \code{toList()}}{
Convert to a List

Convert the R6 object to a list to work more easily with other tooling.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SampleTypeFoldChangeRequest$toList()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
SampleTypeFoldChangeRequest as a base R list.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# convert array of SampleTypeFoldChangeRequest (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SampleTypeFoldChangeRequest-toSimpleType"></a>}}
\if{latex}{\out{\hypertarget{method-SampleTypeFoldChangeRequest-toSimpleType}{}}}
\subsection{Method \code{toSimpleType()}}{
Convert SampleTypeFoldChangeRequest to a base R type
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SampleTypeFoldChangeRequest$toSimpleType()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A base R type, e.g. a list or numeric/character array.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SampleTypeFoldChangeRequest-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-SampleTypeFoldChangeRequest-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of SampleTypeFoldChangeRequest
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SampleTypeFoldChangeRequest$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of SampleTypeFoldChangeRequest
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SampleTypeFoldChangeRequest-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-SampleTypeFoldChangeRequest-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SampleTypeFoldChangeRequest$toJSONString(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Parameters passed to `jsonlite::toJSON`}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
SampleTypeFoldChangeRequest in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SampleTypeFoldChangeRequest-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-SampleTypeFoldChangeRequest-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of SampleTypeFoldChangeRequest
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SampleTypeFoldChangeRequest$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of SampleTypeFoldChangeRequest
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SampleTypeFoldChangeRequest-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-SampleTypeFoldChangeRequest-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to SampleTypeFoldChangeRequest and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SampleTypeFoldChangeRequest$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SampleTypeFoldChangeRequest-toString"></a>}}
\if{latex}{\out{\hypertarget{method-SampleTypeFoldChangeRequest-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SampleTypeFoldChangeRequest$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of SampleTypeFoldChangeRequest
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SampleTypeFoldChangeRequest-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-SampleTypeFoldChangeRequest-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SampleTypeFoldChangeRequest$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SampleTypeFoldChangeRequest-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-SampleTypeFoldChangeRequest-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SampleTypeFoldChangeRequest$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SampleTypeFoldChangeRequest-print"></a>}}
\if{latex}{\out{\hypertarget{method-SampleTypeFoldChangeRequest-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SampleTypeFoldChangeRequest$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SampleTypeFoldChangeRequest-clone"></a>}}
\if{latex}{\out{\hypertarget{method-SampleTypeFoldChangeRequest-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SampleTypeFoldChangeRequest$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
