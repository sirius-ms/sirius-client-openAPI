% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simple_peak.R
\docType{class}
\name{SimplePeak}
\alias{SimplePeak}
\title{SimplePeak}
\format{
An \code{R6Class} generator object
}
\description{
SimplePeak Class

SimplePeak Class
}
\details{
Create a new SimplePeak
}
\examples{

## ------------------------------------------------
## Method `SimplePeak$toList`
## ------------------------------------------------

# convert array of SimplePeak (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{mz}}{numeric [optional]}

\item{\code{intensity}}{numeric [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-SimplePeak-new}{\code{SimplePeak$new()}}
\item \href{#method-SimplePeak-toJSON}{\code{SimplePeak$toJSON()}}
\item \href{#method-SimplePeak-toList}{\code{SimplePeak$toList()}}
\item \href{#method-SimplePeak-toSimpleType}{\code{SimplePeak$toSimpleType()}}
\item \href{#method-SimplePeak-fromJSON}{\code{SimplePeak$fromJSON()}}
\item \href{#method-SimplePeak-toJSONString}{\code{SimplePeak$toJSONString()}}
\item \href{#method-SimplePeak-fromJSONString}{\code{SimplePeak$fromJSONString()}}
\item \href{#method-SimplePeak-validateJSON}{\code{SimplePeak$validateJSON()}}
\item \href{#method-SimplePeak-toString}{\code{SimplePeak$toString()}}
\item \href{#method-SimplePeak-isValid}{\code{SimplePeak$isValid()}}
\item \href{#method-SimplePeak-getInvalidFields}{\code{SimplePeak$getInvalidFields()}}
\item \href{#method-SimplePeak-print}{\code{SimplePeak$print()}}
\item \href{#method-SimplePeak-clone}{\code{SimplePeak$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SimplePeak-new"></a>}}
\if{latex}{\out{\hypertarget{method-SimplePeak-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new SimplePeak class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SimplePeak$new(mz = NULL, intensity = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{mz}}{mz}

\item{\code{intensity}}{intensity}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SimplePeak-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-SimplePeak-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
Convert to an R object. This method is deprecated. Use `toSimpleType()` instead.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SimplePeak$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SimplePeak-toList"></a>}}
\if{latex}{\out{\hypertarget{method-SimplePeak-toList}{}}}
\subsection{Method \code{toList()}}{
Convert to a List

Convert the R6 object to a list to work more easily with other tooling.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SimplePeak$toList()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
SimplePeak as a base R list.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# convert array of SimplePeak (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SimplePeak-toSimpleType"></a>}}
\if{latex}{\out{\hypertarget{method-SimplePeak-toSimpleType}{}}}
\subsection{Method \code{toSimpleType()}}{
Convert SimplePeak to a base R type
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SimplePeak$toSimpleType()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A base R type, e.g. a list or numeric/character array.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SimplePeak-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-SimplePeak-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of SimplePeak
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SimplePeak$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of SimplePeak
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SimplePeak-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-SimplePeak-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SimplePeak$toJSONString(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Parameters passed to `jsonlite::toJSON`}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
SimplePeak in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SimplePeak-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-SimplePeak-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of SimplePeak
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SimplePeak$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of SimplePeak
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SimplePeak-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-SimplePeak-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to SimplePeak and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SimplePeak$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SimplePeak-toString"></a>}}
\if{latex}{\out{\hypertarget{method-SimplePeak-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SimplePeak$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of SimplePeak
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SimplePeak-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-SimplePeak-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SimplePeak$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SimplePeak-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-SimplePeak-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SimplePeak$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SimplePeak-print"></a>}}
\if{latex}{\out{\hypertarget{method-SimplePeak-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SimplePeak$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SimplePeak-clone"></a>}}
\if{latex}{\out{\hypertarget{method-SimplePeak-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SimplePeak$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
