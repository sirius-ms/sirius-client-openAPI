% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spectral_library_match_summary.R
\docType{class}
\name{SpectralLibraryMatchSummary}
\alias{SpectralLibraryMatchSummary}
\title{SpectralLibraryMatchSummary}
\format{
An \code{R6Class} generator object
}
\description{
SpectralLibraryMatchSummary Class

SpectralLibraryMatchSummary Class
}
\details{
Create a new SpectralLibraryMatchSummary
}
\examples{

## ------------------------------------------------
## Method `SpectralLibraryMatchSummary$toList`
## ------------------------------------------------

# convert array of SpectralLibraryMatchSummary (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{bestMatch}}{\link{SpectralLibraryMatch} [optional]}

\item{\code{spectralMatchCount}}{integer}

\item{\code{referenceSpectraCount}}{integer}

\item{\code{databaseCompoundCount}}{integer}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-SpectralLibraryMatchSummary-new}{\code{SpectralLibraryMatchSummary$new()}}
\item \href{#method-SpectralLibraryMatchSummary-toJSON}{\code{SpectralLibraryMatchSummary$toJSON()}}
\item \href{#method-SpectralLibraryMatchSummary-toList}{\code{SpectralLibraryMatchSummary$toList()}}
\item \href{#method-SpectralLibraryMatchSummary-toSimpleType}{\code{SpectralLibraryMatchSummary$toSimpleType()}}
\item \href{#method-SpectralLibraryMatchSummary-fromJSON}{\code{SpectralLibraryMatchSummary$fromJSON()}}
\item \href{#method-SpectralLibraryMatchSummary-toJSONString}{\code{SpectralLibraryMatchSummary$toJSONString()}}
\item \href{#method-SpectralLibraryMatchSummary-fromJSONString}{\code{SpectralLibraryMatchSummary$fromJSONString()}}
\item \href{#method-SpectralLibraryMatchSummary-validateJSON}{\code{SpectralLibraryMatchSummary$validateJSON()}}
\item \href{#method-SpectralLibraryMatchSummary-toString}{\code{SpectralLibraryMatchSummary$toString()}}
\item \href{#method-SpectralLibraryMatchSummary-isValid}{\code{SpectralLibraryMatchSummary$isValid()}}
\item \href{#method-SpectralLibraryMatchSummary-getInvalidFields}{\code{SpectralLibraryMatchSummary$getInvalidFields()}}
\item \href{#method-SpectralLibraryMatchSummary-print}{\code{SpectralLibraryMatchSummary$print()}}
\item \href{#method-SpectralLibraryMatchSummary-clone}{\code{SpectralLibraryMatchSummary$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpectralLibraryMatchSummary-new"></a>}}
\if{latex}{\out{\hypertarget{method-SpectralLibraryMatchSummary-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new SpectralLibraryMatchSummary class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpectralLibraryMatchSummary$new(
  spectralMatchCount,
  referenceSpectraCount,
  databaseCompoundCount,
  bestMatch = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{spectralMatchCount}}{spectralMatchCount}

\item{\code{referenceSpectraCount}}{referenceSpectraCount}

\item{\code{databaseCompoundCount}}{databaseCompoundCount}

\item{\code{bestMatch}}{bestMatch}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpectralLibraryMatchSummary-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-SpectralLibraryMatchSummary-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
Convert to an R object. This method is deprecated. Use `toSimpleType()` instead.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpectralLibraryMatchSummary$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpectralLibraryMatchSummary-toList"></a>}}
\if{latex}{\out{\hypertarget{method-SpectralLibraryMatchSummary-toList}{}}}
\subsection{Method \code{toList()}}{
Convert to a List

Convert the R6 object to a list to work more easily with other tooling.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpectralLibraryMatchSummary$toList()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
SpectralLibraryMatchSummary as a base R list.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# convert array of SpectralLibraryMatchSummary (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpectralLibraryMatchSummary-toSimpleType"></a>}}
\if{latex}{\out{\hypertarget{method-SpectralLibraryMatchSummary-toSimpleType}{}}}
\subsection{Method \code{toSimpleType()}}{
Convert SpectralLibraryMatchSummary to a base R type
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpectralLibraryMatchSummary$toSimpleType()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A base R type, e.g. a list or numeric/character array.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpectralLibraryMatchSummary-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-SpectralLibraryMatchSummary-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of SpectralLibraryMatchSummary
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpectralLibraryMatchSummary$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of SpectralLibraryMatchSummary
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpectralLibraryMatchSummary-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-SpectralLibraryMatchSummary-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpectralLibraryMatchSummary$toJSONString(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Parameters passed to `jsonlite::toJSON`}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
SpectralLibraryMatchSummary in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpectralLibraryMatchSummary-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-SpectralLibraryMatchSummary-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of SpectralLibraryMatchSummary
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpectralLibraryMatchSummary$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of SpectralLibraryMatchSummary
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpectralLibraryMatchSummary-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-SpectralLibraryMatchSummary-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to SpectralLibraryMatchSummary and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpectralLibraryMatchSummary$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpectralLibraryMatchSummary-toString"></a>}}
\if{latex}{\out{\hypertarget{method-SpectralLibraryMatchSummary-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpectralLibraryMatchSummary$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of SpectralLibraryMatchSummary
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpectralLibraryMatchSummary-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-SpectralLibraryMatchSummary-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpectralLibraryMatchSummary$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpectralLibraryMatchSummary-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-SpectralLibraryMatchSummary-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpectralLibraryMatchSummary$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpectralLibraryMatchSummary-print"></a>}}
\if{latex}{\out{\hypertarget{method-SpectralLibraryMatchSummary-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpectralLibraryMatchSummary$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpectralLibraryMatchSummary-clone"></a>}}
\if{latex}{\out{\hypertarget{method-SpectralLibraryMatchSummary-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpectralLibraryMatchSummary$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
