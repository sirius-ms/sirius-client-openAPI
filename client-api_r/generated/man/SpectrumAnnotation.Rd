% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spectrum_annotation.R
\docType{class}
\name{SpectrumAnnotation}
\alias{SpectrumAnnotation}
\title{SpectrumAnnotation}
\format{
An \code{R6Class} generator object
}
\description{
SpectrumAnnotation Class

SpectrumAnnotation Class
}
\details{
Create a new SpectrumAnnotation
}
\examples{

## ------------------------------------------------
## Method `SpectrumAnnotation$toList`
## ------------------------------------------------

# convert array of SpectrumAnnotation (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{molecularFormula}}{Molecular formula that has been annotated to this spectrum character [optional]}

\item{\code{adduct}}{Adduct that has been annotated to this spectrum character [optional]}

\item{\code{exactMass}}{Exact mass based on the annotated molecular formula and ionization numeric [optional]}

\item{\code{massDeviationMz}}{Absolute mass deviation of the exact mass to the precursor mass (precursorMz) of this spectrum in mDa numeric [optional]}

\item{\code{massDeviationPpm}}{Relative mass deviation of the exact mass to the precursor mass (precursorMz) of this spectrum in ppm numeric [optional]}

\item{\code{structureAnnotationSmiles}}{EXPERIMENTAL: This field is experimental and may be changed (or even removed) without notice until it is declared stable.  <p>  Smiles of the structure candidate used to derive substructure peak annotations via epimetheus insilico fragmentation  Substructure highlighting (bond and atom indices) refer to this specific SMILES.  If you standardize or canonicalize this SMILES in any way the indices of substructure highlighting might  not match correctly anymore.  <p>  Null if substructure annotation not available or not requested. character [optional]}

\item{\code{structureAnnotationName}}{EXPERIMENTAL: This field is experimental and may be changed (or even removed) without notice until it is declared stable.  <p>  Name of the structure candidate used to derive substructure peak annotations via epimetheus insilico fragmentation.  <p>  Null if substructure annotation not available or not requested. character [optional]}

\item{\code{structureAnnotationSvg}}{EXPERIMENTAL: This field is experimental and may be changed (or even removed) without notice until it is declared stable.  <p>  SVG graphics of the structure candidate used to derive substructure peak annotations via epimetheus insilico fragmentation  Substructure highlighting (bond and atom indices) refers to this SVG.  <p>  Null if substructure annotation not available or not requested. character [optional]}

\item{\code{structureAnnotationScore}}{EXPERIMENTAL: This field is experimental and may be changed (or even removed) without notice until it is declared stable.  <p>  Overall score of all substructure annotations computed for this structure candidate (structureAnnotationSmiles)  <p>  Null if substructure annotation not available or not requested. numeric [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-SpectrumAnnotation-new}{\code{SpectrumAnnotation$new()}}
\item \href{#method-SpectrumAnnotation-toJSON}{\code{SpectrumAnnotation$toJSON()}}
\item \href{#method-SpectrumAnnotation-toList}{\code{SpectrumAnnotation$toList()}}
\item \href{#method-SpectrumAnnotation-toSimpleType}{\code{SpectrumAnnotation$toSimpleType()}}
\item \href{#method-SpectrumAnnotation-fromJSON}{\code{SpectrumAnnotation$fromJSON()}}
\item \href{#method-SpectrumAnnotation-toJSONString}{\code{SpectrumAnnotation$toJSONString()}}
\item \href{#method-SpectrumAnnotation-fromJSONString}{\code{SpectrumAnnotation$fromJSONString()}}
\item \href{#method-SpectrumAnnotation-validateJSON}{\code{SpectrumAnnotation$validateJSON()}}
\item \href{#method-SpectrumAnnotation-toString}{\code{SpectrumAnnotation$toString()}}
\item \href{#method-SpectrumAnnotation-isValid}{\code{SpectrumAnnotation$isValid()}}
\item \href{#method-SpectrumAnnotation-getInvalidFields}{\code{SpectrumAnnotation$getInvalidFields()}}
\item \href{#method-SpectrumAnnotation-print}{\code{SpectrumAnnotation$print()}}
\item \href{#method-SpectrumAnnotation-clone}{\code{SpectrumAnnotation$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpectrumAnnotation-new"></a>}}
\if{latex}{\out{\hypertarget{method-SpectrumAnnotation-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new SpectrumAnnotation class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpectrumAnnotation$new(
  molecularFormula = NULL,
  adduct = NULL,
  exactMass = NULL,
  massDeviationMz = NULL,
  massDeviationPpm = NULL,
  structureAnnotationSmiles = NULL,
  structureAnnotationName = NULL,
  structureAnnotationSvg = NULL,
  structureAnnotationScore = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{molecularFormula}}{Molecular formula that has been annotated to this spectrum}

\item{\code{adduct}}{Adduct that has been annotated to this spectrum}

\item{\code{exactMass}}{Exact mass based on the annotated molecular formula and ionization}

\item{\code{massDeviationMz}}{Absolute mass deviation of the exact mass to the precursor mass (precursorMz) of this spectrum in mDa}

\item{\code{massDeviationPpm}}{Relative mass deviation of the exact mass to the precursor mass (precursorMz) of this spectrum in ppm}

\item{\code{structureAnnotationSmiles}}{EXPERIMENTAL: This field is experimental and may be changed (or even removed) without notice until it is declared stable.  <p>  Smiles of the structure candidate used to derive substructure peak annotations via epimetheus insilico fragmentation  Substructure highlighting (bond and atom indices) refer to this specific SMILES.  If you standardize or canonicalize this SMILES in any way the indices of substructure highlighting might  not match correctly anymore.  <p>  Null if substructure annotation not available or not requested.}

\item{\code{structureAnnotationName}}{EXPERIMENTAL: This field is experimental and may be changed (or even removed) without notice until it is declared stable.  <p>  Name of the structure candidate used to derive substructure peak annotations via epimetheus insilico fragmentation.  <p>  Null if substructure annotation not available or not requested.}

\item{\code{structureAnnotationSvg}}{EXPERIMENTAL: This field is experimental and may be changed (or even removed) without notice until it is declared stable.  <p>  SVG graphics of the structure candidate used to derive substructure peak annotations via epimetheus insilico fragmentation  Substructure highlighting (bond and atom indices) refers to this SVG.  <p>  Null if substructure annotation not available or not requested.}

\item{\code{structureAnnotationScore}}{EXPERIMENTAL: This field is experimental and may be changed (or even removed) without notice until it is declared stable.  <p>  Overall score of all substructure annotations computed for this structure candidate (structureAnnotationSmiles)  <p>  Null if substructure annotation not available or not requested.}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpectrumAnnotation-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-SpectrumAnnotation-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
Convert to an R object. This method is deprecated. Use `toSimpleType()` instead.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpectrumAnnotation$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpectrumAnnotation-toList"></a>}}
\if{latex}{\out{\hypertarget{method-SpectrumAnnotation-toList}{}}}
\subsection{Method \code{toList()}}{
Convert to a List

Convert the R6 object to a list to work more easily with other tooling.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpectrumAnnotation$toList()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
SpectrumAnnotation as a base R list.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# convert array of SpectrumAnnotation (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpectrumAnnotation-toSimpleType"></a>}}
\if{latex}{\out{\hypertarget{method-SpectrumAnnotation-toSimpleType}{}}}
\subsection{Method \code{toSimpleType()}}{
Convert SpectrumAnnotation to a base R type
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpectrumAnnotation$toSimpleType()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A base R type, e.g. a list or numeric/character array.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpectrumAnnotation-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-SpectrumAnnotation-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of SpectrumAnnotation
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpectrumAnnotation$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of SpectrumAnnotation
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpectrumAnnotation-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-SpectrumAnnotation-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpectrumAnnotation$toJSONString(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Parameters passed to `jsonlite::toJSON`}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
SpectrumAnnotation in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpectrumAnnotation-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-SpectrumAnnotation-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of SpectrumAnnotation
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpectrumAnnotation$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of SpectrumAnnotation
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpectrumAnnotation-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-SpectrumAnnotation-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to SpectrumAnnotation and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpectrumAnnotation$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpectrumAnnotation-toString"></a>}}
\if{latex}{\out{\hypertarget{method-SpectrumAnnotation-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpectrumAnnotation$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of SpectrumAnnotation
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpectrumAnnotation-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-SpectrumAnnotation-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpectrumAnnotation$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpectrumAnnotation-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-SpectrumAnnotation-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpectrumAnnotation$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpectrumAnnotation-print"></a>}}
\if{latex}{\out{\hypertarget{method-SpectrumAnnotation-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpectrumAnnotation$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpectrumAnnotation-clone"></a>}}
\if{latex}{\out{\hypertarget{method-SpectrumAnnotation-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpectrumAnnotation$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
