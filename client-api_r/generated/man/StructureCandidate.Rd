% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/structure_candidate.R
\docType{class}
\name{StructureCandidate}
\alias{StructureCandidate}
\title{StructureCandidate}
\format{
An \code{R6Class} generator object
}
\description{
StructureCandidate Class

StructureCandidate Class
}
\details{
Create a new StructureCandidate
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{inchiKey}}{character [optional]}

\item{\code{smiles}}{character [optional]}

\item{\code{structureName}}{character [optional]}

\item{\code{xlogP}}{numeric [optional]}

\item{\code{dbLinks}}{List of structure database links belonging to this structure candidate  OPTIONAL: needs to be added by parameter list(\link{DBLink}) [optional]}

\item{\code{spectralLibraryMatches}}{List of spectral library matches belonging to this structure candidate  OPTIONAL: needs to be added by parameter list(\link{SpectralLibraryMatch}) [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-StructureCandidate-new}{\code{StructureCandidate$new()}}
\item \href{#method-StructureCandidate-toJSON}{\code{StructureCandidate$toJSON()}}
\item \href{#method-StructureCandidate-fromJSON}{\code{StructureCandidate$fromJSON()}}
\item \href{#method-StructureCandidate-toJSONString}{\code{StructureCandidate$toJSONString()}}
\item \href{#method-StructureCandidate-fromJSONString}{\code{StructureCandidate$fromJSONString()}}
\item \href{#method-StructureCandidate-validateJSON}{\code{StructureCandidate$validateJSON()}}
\item \href{#method-StructureCandidate-toString}{\code{StructureCandidate$toString()}}
\item \href{#method-StructureCandidate-isValid}{\code{StructureCandidate$isValid()}}
\item \href{#method-StructureCandidate-getInvalidFields}{\code{StructureCandidate$getInvalidFields()}}
\item \href{#method-StructureCandidate-print}{\code{StructureCandidate$print()}}
\item \href{#method-StructureCandidate-clone}{\code{StructureCandidate$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StructureCandidate-new"></a>}}
\if{latex}{\out{\hypertarget{method-StructureCandidate-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new StructureCandidate class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StructureCandidate$new(
  inchiKey = NULL,
  smiles = NULL,
  structureName = NULL,
  xlogP = NULL,
  dbLinks = NULL,
  spectralLibraryMatches = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{inchiKey}}{inchiKey}

\item{\code{smiles}}{smiles}

\item{\code{structureName}}{structureName}

\item{\code{xlogP}}{xlogP}

\item{\code{dbLinks}}{List of structure database links belonging to this structure candidate  OPTIONAL: needs to be added by parameter}

\item{\code{spectralLibraryMatches}}{List of spectral library matches belonging to this structure candidate  OPTIONAL: needs to be added by parameter}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StructureCandidate-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-StructureCandidate-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StructureCandidate$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
StructureCandidate in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StructureCandidate-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-StructureCandidate-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of StructureCandidate
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StructureCandidate$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of StructureCandidate
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StructureCandidate-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-StructureCandidate-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StructureCandidate$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
StructureCandidate in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StructureCandidate-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-StructureCandidate-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of StructureCandidate
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StructureCandidate$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of StructureCandidate
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StructureCandidate-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-StructureCandidate-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to StructureCandidate and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StructureCandidate$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StructureCandidate-toString"></a>}}
\if{latex}{\out{\hypertarget{method-StructureCandidate-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StructureCandidate$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of StructureCandidate
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StructureCandidate-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-StructureCandidate-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StructureCandidate$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StructureCandidate-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-StructureCandidate-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StructureCandidate$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StructureCandidate-print"></a>}}
\if{latex}{\out{\hypertarget{method-StructureCandidate-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StructureCandidate$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StructureCandidate-clone"></a>}}
\if{latex}{\out{\hypertarget{method-StructureCandidate-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StructureCandidate$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
