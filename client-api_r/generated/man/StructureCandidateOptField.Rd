% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/structure_candidate_opt_field.R
\docType{class}
\name{StructureCandidateOptField}
\alias{StructureCandidateOptField}
\title{StructureCandidateOptField}
\format{
An \code{R6Class} generator object
}
\description{
StructureCandidateOptField Class
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-StructureCandidateOptField-new}{\code{StructureCandidateOptField$new()}}
\item \href{#method-StructureCandidateOptField-toJSON}{\code{StructureCandidateOptField$toJSON()}}
\item \href{#method-StructureCandidateOptField-fromJSON}{\code{StructureCandidateOptField$fromJSON()}}
\item \href{#method-StructureCandidateOptField-toJSONString}{\code{StructureCandidateOptField$toJSONString()}}
\item \href{#method-StructureCandidateOptField-fromJSONString}{\code{StructureCandidateOptField$fromJSONString()}}
\item \href{#method-StructureCandidateOptField-clone}{\code{StructureCandidateOptField$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StructureCandidateOptField-new"></a>}}
\if{latex}{\out{\hypertarget{method-StructureCandidateOptField-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new StructureCandidateOptField class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StructureCandidateOptField$new(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StructureCandidateOptField-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-StructureCandidateOptField-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StructureCandidateOptField$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
StructureCandidateOptField in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StructureCandidateOptField-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-StructureCandidateOptField-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of StructureCandidateOptField
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StructureCandidateOptField$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of StructureCandidateOptField
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StructureCandidateOptField-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-StructureCandidateOptField-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StructureCandidateOptField$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
StructureCandidateOptField in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StructureCandidateOptField-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-StructureCandidateOptField-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of StructureCandidateOptField
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StructureCandidateOptField$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of StructureCandidateOptField
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StructureCandidateOptField-clone"></a>}}
\if{latex}{\out{\hypertarget{method-StructureCandidateOptField-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StructureCandidateOptField$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
