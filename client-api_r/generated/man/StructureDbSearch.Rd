% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/structure_db_search.R
\docType{class}
\name{StructureDbSearch}
\alias{StructureDbSearch}
\title{StructureDbSearch}
\format{
An \code{R6Class} generator object
}
\description{
User/developer friendly parameter subset for the CSI:FingerID structure db search tool.  Needs results from FingerprintPrediction and Canopus Tool.  Non-Null parameters in this Object well override their equivalent value in the config map.

StructureDbSearch Class
}
\details{
Create a new StructureDbSearch
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{enabled}}{tags whether the tool is enabled character [optional]}

\item{\code{structureSearchDBs}}{Structure databases to search in, If expansive search is enabled this DB selection will be expanded to PubChem  if not high confidence hit was found in the selected databases.   Defaults to BIO + Custom Databases. Possible values are available to Database API. list(character) [optional]}

\item{\code{tagStructuresWithLipidClass}}{Candidates matching the lipid class estimated by El Gordo will be tagged.  The lipid class will only be available if El Gordo predicts that the MS/MS is a lipid spectrum.  If this parameter is set to 'false' El Gordo will still be executed and e.g. improve the fragmentation  tree, but the matching structure candidates will not be tagged if they match lipid class. character [optional]}

\item{\code{expansiveSearchConfidenceMode}}{\link{ConfidenceMode} [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-StructureDbSearch-new}{\code{StructureDbSearch$new()}}
\item \href{#method-StructureDbSearch-toJSON}{\code{StructureDbSearch$toJSON()}}
\item \href{#method-StructureDbSearch-fromJSON}{\code{StructureDbSearch$fromJSON()}}
\item \href{#method-StructureDbSearch-toJSONString}{\code{StructureDbSearch$toJSONString()}}
\item \href{#method-StructureDbSearch-fromJSONString}{\code{StructureDbSearch$fromJSONString()}}
\item \href{#method-StructureDbSearch-validateJSON}{\code{StructureDbSearch$validateJSON()}}
\item \href{#method-StructureDbSearch-toString}{\code{StructureDbSearch$toString()}}
\item \href{#method-StructureDbSearch-isValid}{\code{StructureDbSearch$isValid()}}
\item \href{#method-StructureDbSearch-getInvalidFields}{\code{StructureDbSearch$getInvalidFields()}}
\item \href{#method-StructureDbSearch-print}{\code{StructureDbSearch$print()}}
\item \href{#method-StructureDbSearch-clone}{\code{StructureDbSearch$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StructureDbSearch-new"></a>}}
\if{latex}{\out{\hypertarget{method-StructureDbSearch-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new StructureDbSearch class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StructureDbSearch$new(
  enabled = NULL,
  structureSearchDBs = NULL,
  tagStructuresWithLipidClass = NULL,
  expansiveSearchConfidenceMode = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{enabled}}{tags whether the tool is enabled}

\item{\code{structureSearchDBs}}{Structure databases to search in, If expansive search is enabled this DB selection will be expanded to PubChem  if not high confidence hit was found in the selected databases.   Defaults to BIO + Custom Databases. Possible values are available to Database API.}

\item{\code{tagStructuresWithLipidClass}}{Candidates matching the lipid class estimated by El Gordo will be tagged.  The lipid class will only be available if El Gordo predicts that the MS/MS is a lipid spectrum.  If this parameter is set to 'false' El Gordo will still be executed and e.g. improve the fragmentation  tree, but the matching structure candidates will not be tagged if they match lipid class.}

\item{\code{expansiveSearchConfidenceMode}}{expansiveSearchConfidenceMode}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StructureDbSearch-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-StructureDbSearch-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StructureDbSearch$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
StructureDbSearch in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StructureDbSearch-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-StructureDbSearch-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of StructureDbSearch
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StructureDbSearch$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of StructureDbSearch
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StructureDbSearch-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-StructureDbSearch-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StructureDbSearch$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
StructureDbSearch in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StructureDbSearch-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-StructureDbSearch-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of StructureDbSearch
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StructureDbSearch$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of StructureDbSearch
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StructureDbSearch-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-StructureDbSearch-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to StructureDbSearch and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StructureDbSearch$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StructureDbSearch-toString"></a>}}
\if{latex}{\out{\hypertarget{method-StructureDbSearch-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StructureDbSearch$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of StructureDbSearch
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StructureDbSearch-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-StructureDbSearch-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StructureDbSearch$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StructureDbSearch-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-StructureDbSearch-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StructureDbSearch$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StructureDbSearch-print"></a>}}
\if{latex}{\out{\hypertarget{method-StructureDbSearch-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StructureDbSearch$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StructureDbSearch-clone"></a>}}
\if{latex}{\out{\hypertarget{method-StructureDbSearch-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StructureDbSearch$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
