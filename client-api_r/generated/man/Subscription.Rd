% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/subscription.R
\docType{class}
\name{Subscription}
\alias{Subscription}
\title{Subscription}
\format{
An \code{R6Class} generator object
}
\description{
Subscription Class

Subscription Class
}
\details{
Create a new Subscription
}
\examples{

## ------------------------------------------------
## Method `Subscription$toList`
## ------------------------------------------------

# convert array of Subscription (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{sid}}{Unique identifier of this subscription character [optional]}

\item{\code{subscriberId}}{ID of the owner of the subscription.  This can be the ID of any SubscriptionOwner (e.g.  Group or  User)  depending on the level on which a subscription should be is valid. character [optional]}

\item{\code{subscriberName}}{Optional name of the owner of this subscription character [optional]}

\item{\code{expirationDate}}{character [optional]}

\item{\code{startDate}}{character [optional]}

\item{\code{countQueries}}{character [optional]}

\item{\code{instanceLimit}}{Limit of instances (features) that can be computed with this subscription integer [optional]}

\item{\code{instanceHashRecordingTime}}{Hash is used to allow recomputing identical data without increasing counted instances (features).  The recording time is the amount of time an instance is memorized is integer [optional]}

\item{\code{maxQueriesPerInstance}}{Maximum number of queries (e.g. prediction) that can be performed  for one instance before it is counted another time. integer [optional]}

\item{\code{maxUserAccounts}}{integer [optional]}

\item{\code{serviceUrl}}{character [optional]}

\item{\code{description}}{character [optional]}

\item{\code{name}}{character [optional]}

\item{\code{tos}}{character [optional]}

\item{\code{pp}}{character [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Subscription-new}{\code{Subscription$new()}}
\item \href{#method-Subscription-toJSON}{\code{Subscription$toJSON()}}
\item \href{#method-Subscription-toList}{\code{Subscription$toList()}}
\item \href{#method-Subscription-toSimpleType}{\code{Subscription$toSimpleType()}}
\item \href{#method-Subscription-fromJSON}{\code{Subscription$fromJSON()}}
\item \href{#method-Subscription-toJSONString}{\code{Subscription$toJSONString()}}
\item \href{#method-Subscription-fromJSONString}{\code{Subscription$fromJSONString()}}
\item \href{#method-Subscription-validateJSON}{\code{Subscription$validateJSON()}}
\item \href{#method-Subscription-toString}{\code{Subscription$toString()}}
\item \href{#method-Subscription-isValid}{\code{Subscription$isValid()}}
\item \href{#method-Subscription-getInvalidFields}{\code{Subscription$getInvalidFields()}}
\item \href{#method-Subscription-print}{\code{Subscription$print()}}
\item \href{#method-Subscription-clone}{\code{Subscription$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Subscription-new"></a>}}
\if{latex}{\out{\hypertarget{method-Subscription-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new Subscription class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Subscription$new(
  sid = NULL,
  subscriberId = NULL,
  subscriberName = NULL,
  expirationDate = NULL,
  startDate = NULL,
  countQueries = NULL,
  instanceLimit = NULL,
  instanceHashRecordingTime = NULL,
  maxQueriesPerInstance = NULL,
  maxUserAccounts = NULL,
  serviceUrl = NULL,
  description = NULL,
  name = NULL,
  tos = NULL,
  pp = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sid}}{Unique identifier of this subscription}

\item{\code{subscriberId}}{ID of the owner of the subscription.  This can be the ID of any SubscriptionOwner (e.g.  Group or  User)  depending on the level on which a subscription should be is valid.}

\item{\code{subscriberName}}{Optional name of the owner of this subscription}

\item{\code{expirationDate}}{expirationDate}

\item{\code{startDate}}{startDate}

\item{\code{countQueries}}{countQueries}

\item{\code{instanceLimit}}{Limit of instances (features) that can be computed with this subscription}

\item{\code{instanceHashRecordingTime}}{Hash is used to allow recomputing identical data without increasing counted instances (features).  The recording time is the amount of time an instance is memorized is}

\item{\code{maxQueriesPerInstance}}{Maximum number of queries (e.g. prediction) that can be performed  for one instance before it is counted another time.}

\item{\code{maxUserAccounts}}{maxUserAccounts}

\item{\code{serviceUrl}}{serviceUrl}

\item{\code{description}}{description}

\item{\code{name}}{name}

\item{\code{tos}}{tos}

\item{\code{pp}}{pp}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Subscription-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Subscription-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
Convert to an R object. This method is deprecated. Use `toSimpleType()` instead.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Subscription$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Subscription-toList"></a>}}
\if{latex}{\out{\hypertarget{method-Subscription-toList}{}}}
\subsection{Method \code{toList()}}{
Convert to a List

Convert the R6 object to a list to work more easily with other tooling.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Subscription$toList()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Subscription as a base R list.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# convert array of Subscription (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Subscription-toSimpleType"></a>}}
\if{latex}{\out{\hypertarget{method-Subscription-toSimpleType}{}}}
\subsection{Method \code{toSimpleType()}}{
Convert Subscription to a base R type
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Subscription$toSimpleType()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A base R type, e.g. a list or numeric/character array.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Subscription-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Subscription-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of Subscription
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Subscription$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Subscription
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Subscription-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Subscription-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Subscription$toJSONString(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Parameters passed to `jsonlite::toJSON`}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Subscription in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Subscription-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Subscription-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of Subscription
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Subscription$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Subscription
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Subscription-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Subscription-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to Subscription and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Subscription$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Subscription-toString"></a>}}
\if{latex}{\out{\hypertarget{method-Subscription-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Subscription$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of Subscription
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Subscription-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-Subscription-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Subscription$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Subscription-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-Subscription-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Subscription$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Subscription-print"></a>}}
\if{latex}{\out{\hypertarget{method-Subscription-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Subscription$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Subscription-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Subscription-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Subscription$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
