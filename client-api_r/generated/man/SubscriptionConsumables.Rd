% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/subscription_consumables.R
\docType{class}
\name{SubscriptionConsumables}
\alias{SubscriptionConsumables}
\title{SubscriptionConsumables}
\format{
An \code{R6Class} generator object
}
\description{
SubscriptionConsumables Class

SubscriptionConsumables Class
}
\details{
Create a new SubscriptionConsumables
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{countedCompounds}}{integer [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-SubscriptionConsumables-new}{\code{SubscriptionConsumables$new()}}
\item \href{#method-SubscriptionConsumables-toJSON}{\code{SubscriptionConsumables$toJSON()}}
\item \href{#method-SubscriptionConsumables-fromJSON}{\code{SubscriptionConsumables$fromJSON()}}
\item \href{#method-SubscriptionConsumables-toJSONString}{\code{SubscriptionConsumables$toJSONString()}}
\item \href{#method-SubscriptionConsumables-fromJSONString}{\code{SubscriptionConsumables$fromJSONString()}}
\item \href{#method-SubscriptionConsumables-validateJSON}{\code{SubscriptionConsumables$validateJSON()}}
\item \href{#method-SubscriptionConsumables-toString}{\code{SubscriptionConsumables$toString()}}
\item \href{#method-SubscriptionConsumables-isValid}{\code{SubscriptionConsumables$isValid()}}
\item \href{#method-SubscriptionConsumables-getInvalidFields}{\code{SubscriptionConsumables$getInvalidFields()}}
\item \href{#method-SubscriptionConsumables-print}{\code{SubscriptionConsumables$print()}}
\item \href{#method-SubscriptionConsumables-clone}{\code{SubscriptionConsumables$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SubscriptionConsumables-new"></a>}}
\if{latex}{\out{\hypertarget{method-SubscriptionConsumables-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new SubscriptionConsumables class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SubscriptionConsumables$new(countedCompounds = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{countedCompounds}}{countedCompounds}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SubscriptionConsumables-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-SubscriptionConsumables-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SubscriptionConsumables$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
SubscriptionConsumables in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SubscriptionConsumables-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-SubscriptionConsumables-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of SubscriptionConsumables
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SubscriptionConsumables$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of SubscriptionConsumables
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SubscriptionConsumables-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-SubscriptionConsumables-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SubscriptionConsumables$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
SubscriptionConsumables in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SubscriptionConsumables-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-SubscriptionConsumables-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of SubscriptionConsumables
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SubscriptionConsumables$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of SubscriptionConsumables
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SubscriptionConsumables-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-SubscriptionConsumables-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to SubscriptionConsumables and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SubscriptionConsumables$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SubscriptionConsumables-toString"></a>}}
\if{latex}{\out{\hypertarget{method-SubscriptionConsumables-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SubscriptionConsumables$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of SubscriptionConsumables
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SubscriptionConsumables-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-SubscriptionConsumables-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SubscriptionConsumables$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SubscriptionConsumables-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-SubscriptionConsumables-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SubscriptionConsumables$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SubscriptionConsumables-print"></a>}}
\if{latex}{\out{\hypertarget{method-SubscriptionConsumables-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SubscriptionConsumables$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SubscriptionConsumables-clone"></a>}}
\if{latex}{\out{\hypertarget{method-SubscriptionConsumables-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SubscriptionConsumables$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
