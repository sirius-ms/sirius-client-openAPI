% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tag_definition_import.R
\docType{class}
\name{TagDefinitionImport}
\alias{TagDefinitionImport}
\title{TagDefinitionImport}
\format{
An \code{R6Class} generator object
}
\description{
TagDefinitionImport Class

TagDefinitionImport Class
}
\details{
Create a new TagDefinitionImport
}
\examples{

## ------------------------------------------------
## Method `TagDefinitionImport$toList`
## ------------------------------------------------

# convert array of TagDefinitionImport (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{tagName}}{Name of this tag defined by this definition (key) character}

\item{\code{description}}{A human-readable description about the purpose of this tag. character [optional]}

\item{\code{tagType}}{A simple string based identifier to specify the type/scope/purpose of this tag. character [optional]}

\item{\code{valueType}}{character}

\item{\code{possibleValues}}{list(object) [optional]}

\item{\code{minValue}}{object [optional]}

\item{\code{maxValue}}{object [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-TagDefinitionImport-new}{\code{TagDefinitionImport$new()}}
\item \href{#method-TagDefinitionImport-toJSON}{\code{TagDefinitionImport$toJSON()}}
\item \href{#method-TagDefinitionImport-toList}{\code{TagDefinitionImport$toList()}}
\item \href{#method-TagDefinitionImport-toSimpleType}{\code{TagDefinitionImport$toSimpleType()}}
\item \href{#method-TagDefinitionImport-fromJSON}{\code{TagDefinitionImport$fromJSON()}}
\item \href{#method-TagDefinitionImport-toJSONString}{\code{TagDefinitionImport$toJSONString()}}
\item \href{#method-TagDefinitionImport-fromJSONString}{\code{TagDefinitionImport$fromJSONString()}}
\item \href{#method-TagDefinitionImport-validateJSON}{\code{TagDefinitionImport$validateJSON()}}
\item \href{#method-TagDefinitionImport-toString}{\code{TagDefinitionImport$toString()}}
\item \href{#method-TagDefinitionImport-isValid}{\code{TagDefinitionImport$isValid()}}
\item \href{#method-TagDefinitionImport-getInvalidFields}{\code{TagDefinitionImport$getInvalidFields()}}
\item \href{#method-TagDefinitionImport-print}{\code{TagDefinitionImport$print()}}
\item \href{#method-TagDefinitionImport-clone}{\code{TagDefinitionImport$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TagDefinitionImport-new"></a>}}
\if{latex}{\out{\hypertarget{method-TagDefinitionImport-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new TagDefinitionImport class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TagDefinitionImport$new(
  tagName,
  valueType,
  description = NULL,
  tagType = NULL,
  possibleValues = NULL,
  minValue = NULL,
  maxValue = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{tagName}}{Name of this tag defined by this definition (key)}

\item{\code{valueType}}{valueType}

\item{\code{description}}{A human-readable description about the purpose of this tag.}

\item{\code{tagType}}{A simple string based identifier to specify the type/scope/purpose of this tag.}

\item{\code{possibleValues}}{possibleValues}

\item{\code{minValue}}{minValue}

\item{\code{maxValue}}{maxValue}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TagDefinitionImport-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-TagDefinitionImport-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
Convert to an R object. This method is deprecated. Use `toSimpleType()` instead.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TagDefinitionImport$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TagDefinitionImport-toList"></a>}}
\if{latex}{\out{\hypertarget{method-TagDefinitionImport-toList}{}}}
\subsection{Method \code{toList()}}{
Convert to a List

Convert the R6 object to a list to work more easily with other tooling.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TagDefinitionImport$toList()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
TagDefinitionImport as a base R list.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# convert array of TagDefinitionImport (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TagDefinitionImport-toSimpleType"></a>}}
\if{latex}{\out{\hypertarget{method-TagDefinitionImport-toSimpleType}{}}}
\subsection{Method \code{toSimpleType()}}{
Convert TagDefinitionImport to a base R type
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TagDefinitionImport$toSimpleType()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A base R type, e.g. a list or numeric/character array.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TagDefinitionImport-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-TagDefinitionImport-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of TagDefinitionImport
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TagDefinitionImport$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of TagDefinitionImport
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TagDefinitionImport-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-TagDefinitionImport-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TagDefinitionImport$toJSONString(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Parameters passed to `jsonlite::toJSON`}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
TagDefinitionImport in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TagDefinitionImport-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-TagDefinitionImport-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of TagDefinitionImport
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TagDefinitionImport$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of TagDefinitionImport
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TagDefinitionImport-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-TagDefinitionImport-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to TagDefinitionImport and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TagDefinitionImport$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TagDefinitionImport-toString"></a>}}
\if{latex}{\out{\hypertarget{method-TagDefinitionImport-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TagDefinitionImport$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of TagDefinitionImport
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TagDefinitionImport-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-TagDefinitionImport-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TagDefinitionImport$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TagDefinitionImport-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-TagDefinitionImport-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TagDefinitionImport$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TagDefinitionImport-print"></a>}}
\if{latex}{\out{\hypertarget{method-TagDefinitionImport-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TagDefinitionImport$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TagDefinitionImport-clone"></a>}}
\if{latex}{\out{\hypertarget{method-TagDefinitionImport-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TagDefinitionImport$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
