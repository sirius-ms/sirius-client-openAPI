% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trace.R
\docType{class}
\name{Trace}
\alias{Trace}
\title{Trace}
\format{
An \code{R6Class} generator object
}
\description{
Trace Class

Trace Class
}
\details{
Create a new Trace
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{id}}{integer [optional]}

\item{\code{sampleId}}{integer [optional]}

\item{\code{sampleName}}{character [optional]}

\item{\code{label}}{character [optional]}

\item{\code{intensities}}{list(numeric) [optional]}

\item{\code{annotations}}{list(\link{Annotation}) [optional]}

\item{\code{mz}}{numeric [optional]}

\item{\code{merged}}{character [optional]}

\item{\code{normalizationFactor}}{Traces are stored with raw intensity values. The normalization factor maps them to relative intensities,  such that traces from different samples can be compared. numeric [optional]}

\item{\code{noiseLevel}}{The noise level is estimated from the median noise in the surrounding scans. It can be used to  calculate signal-to-noise ratios. numeric [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Trace-new}{\code{Trace$new()}}
\item \href{#method-Trace-toJSON}{\code{Trace$toJSON()}}
\item \href{#method-Trace-fromJSON}{\code{Trace$fromJSON()}}
\item \href{#method-Trace-toJSONString}{\code{Trace$toJSONString()}}
\item \href{#method-Trace-fromJSONString}{\code{Trace$fromJSONString()}}
\item \href{#method-Trace-validateJSON}{\code{Trace$validateJSON()}}
\item \href{#method-Trace-toString}{\code{Trace$toString()}}
\item \href{#method-Trace-isValid}{\code{Trace$isValid()}}
\item \href{#method-Trace-getInvalidFields}{\code{Trace$getInvalidFields()}}
\item \href{#method-Trace-print}{\code{Trace$print()}}
\item \href{#method-Trace-clone}{\code{Trace$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Trace-new"></a>}}
\if{latex}{\out{\hypertarget{method-Trace-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new Trace class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Trace$new(
  id = NULL,
  sampleId = NULL,
  sampleName = NULL,
  label = NULL,
  intensities = NULL,
  annotations = NULL,
  mz = NULL,
  merged = NULL,
  normalizationFactor = NULL,
  noiseLevel = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{id}

\item{\code{sampleId}}{sampleId}

\item{\code{sampleName}}{sampleName}

\item{\code{label}}{label}

\item{\code{intensities}}{intensities}

\item{\code{annotations}}{annotations}

\item{\code{mz}}{mz}

\item{\code{merged}}{merged}

\item{\code{normalizationFactor}}{Traces are stored with raw intensity values. The normalization factor maps them to relative intensities,  such that traces from different samples can be compared.}

\item{\code{noiseLevel}}{The noise level is estimated from the median noise in the surrounding scans. It can be used to  calculate signal-to-noise ratios.}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Trace-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Trace-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Trace$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Trace in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Trace-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Trace-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of Trace
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Trace$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Trace
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Trace-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Trace-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Trace$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Trace in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Trace-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Trace-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of Trace
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Trace$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Trace
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Trace-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Trace-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to Trace and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Trace$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Trace-toString"></a>}}
\if{latex}{\out{\hypertarget{method-Trace-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Trace$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of Trace
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Trace-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-Trace-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Trace$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Trace-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-Trace-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Trace$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Trace-print"></a>}}
\if{latex}{\out{\hypertarget{method-Trace-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Trace$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Trace-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Trace-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Trace$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
