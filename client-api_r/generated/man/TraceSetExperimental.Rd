% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trace_set_experimental.R
\docType{class}
\name{TraceSetExperimental}
\alias{TraceSetExperimental}
\title{TraceSetExperimental}
\format{
An \code{R6Class} generator object
}
\description{
EXPERIMENTAL: This schema is experimental and may be changed (or even removed) without notice until it is declared stable.

TraceSetExperimental Class
}
\details{
Create a new TraceSetExperimental
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{adductNetwork}}{\link{AdductNetworkExperimental} [optional]}

\item{\code{sampleId}}{character [optional]}

\item{\code{sampleName}}{character [optional]}

\item{\code{axes}}{\link{Axes} [optional]}

\item{\code{traces}}{list(\link{TraceExperimental}) [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-TraceSetExperimental-new}{\code{TraceSetExperimental$new()}}
\item \href{#method-TraceSetExperimental-toJSON}{\code{TraceSetExperimental$toJSON()}}
\item \href{#method-TraceSetExperimental-fromJSON}{\code{TraceSetExperimental$fromJSON()}}
\item \href{#method-TraceSetExperimental-toJSONString}{\code{TraceSetExperimental$toJSONString()}}
\item \href{#method-TraceSetExperimental-fromJSONString}{\code{TraceSetExperimental$fromJSONString()}}
\item \href{#method-TraceSetExperimental-validateJSON}{\code{TraceSetExperimental$validateJSON()}}
\item \href{#method-TraceSetExperimental-toString}{\code{TraceSetExperimental$toString()}}
\item \href{#method-TraceSetExperimental-isValid}{\code{TraceSetExperimental$isValid()}}
\item \href{#method-TraceSetExperimental-getInvalidFields}{\code{TraceSetExperimental$getInvalidFields()}}
\item \href{#method-TraceSetExperimental-print}{\code{TraceSetExperimental$print()}}
\item \href{#method-TraceSetExperimental-clone}{\code{TraceSetExperimental$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TraceSetExperimental-new"></a>}}
\if{latex}{\out{\hypertarget{method-TraceSetExperimental-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new TraceSetExperimental class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TraceSetExperimental$new(
  adductNetwork = NULL,
  sampleId = NULL,
  sampleName = NULL,
  axes = NULL,
  traces = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{adductNetwork}}{adductNetwork}

\item{\code{sampleId}}{sampleId}

\item{\code{sampleName}}{sampleName}

\item{\code{axes}}{axes}

\item{\code{traces}}{traces}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TraceSetExperimental-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-TraceSetExperimental-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TraceSetExperimental$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
TraceSetExperimental in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TraceSetExperimental-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-TraceSetExperimental-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of TraceSetExperimental
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TraceSetExperimental$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of TraceSetExperimental
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TraceSetExperimental-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-TraceSetExperimental-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TraceSetExperimental$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
TraceSetExperimental in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TraceSetExperimental-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-TraceSetExperimental-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of TraceSetExperimental
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TraceSetExperimental$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of TraceSetExperimental
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TraceSetExperimental-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-TraceSetExperimental-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to TraceSetExperimental and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TraceSetExperimental$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TraceSetExperimental-toString"></a>}}
\if{latex}{\out{\hypertarget{method-TraceSetExperimental-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TraceSetExperimental$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of TraceSetExperimental
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TraceSetExperimental-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-TraceSetExperimental-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TraceSetExperimental$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TraceSetExperimental-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-TraceSetExperimental-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TraceSetExperimental$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TraceSetExperimental-print"></a>}}
\if{latex}{\out{\hypertarget{method-TraceSetExperimental-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TraceSetExperimental$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TraceSetExperimental-clone"></a>}}
\if{latex}{\out{\hypertarget{method-TraceSetExperimental-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TraceSetExperimental$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
