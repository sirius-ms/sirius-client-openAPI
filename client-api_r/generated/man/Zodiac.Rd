% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/zodiac.R
\docType{class}
\name{Zodiac}
\alias{Zodiac}
\title{Zodiac}
\format{
An \code{R6Class} generator object
}
\description{
User/developer friendly parameter subset for the ZODIAC tool (Network base molecular formula re-ranking).  Needs results from Formula/SIRIUS Tool

Zodiac Class
}
\details{
Create a new Zodiac
}
\examples{

## ------------------------------------------------
## Method `Zodiac$toList`
## ------------------------------------------------

# convert array of Zodiac (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{enabled}}{tags whether the tool is enabled character [optional]}

\item{\code{consideredCandidatesAt300Mz}}{Maximum number of candidate molecular formulas (fragmentation trees computed by SIRIUS) per compound which are considered by ZODIAC for compounds below 300 m/z. integer [optional]}

\item{\code{consideredCandidatesAt800Mz}}{Maximum number of candidate molecular formulas (fragmentation trees computed by SIRIUS) per compound which are considered by ZODIAC for compounds above 800 m/z. integer [optional]}

\item{\code{runInTwoSteps}}{As default ZODIAC runs a 2-step approach. First running 'good quality compounds' only, and afterwards including the remaining. character [optional]}

\item{\code{edgeFilterThresholds}}{\link{ZodiacEdgeFilterThresholds} [optional]}

\item{\code{gibbsSamplerParameters}}{\link{ZodiacEpochs} [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Zodiac-new}{\code{Zodiac$new()}}
\item \href{#method-Zodiac-toJSON}{\code{Zodiac$toJSON()}}
\item \href{#method-Zodiac-toList}{\code{Zodiac$toList()}}
\item \href{#method-Zodiac-toSimpleType}{\code{Zodiac$toSimpleType()}}
\item \href{#method-Zodiac-fromJSON}{\code{Zodiac$fromJSON()}}
\item \href{#method-Zodiac-toJSONString}{\code{Zodiac$toJSONString()}}
\item \href{#method-Zodiac-fromJSONString}{\code{Zodiac$fromJSONString()}}
\item \href{#method-Zodiac-validateJSON}{\code{Zodiac$validateJSON()}}
\item \href{#method-Zodiac-toString}{\code{Zodiac$toString()}}
\item \href{#method-Zodiac-isValid}{\code{Zodiac$isValid()}}
\item \href{#method-Zodiac-getInvalidFields}{\code{Zodiac$getInvalidFields()}}
\item \href{#method-Zodiac-print}{\code{Zodiac$print()}}
\item \href{#method-Zodiac-clone}{\code{Zodiac$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Zodiac-new"></a>}}
\if{latex}{\out{\hypertarget{method-Zodiac-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new Zodiac class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Zodiac$new(
  enabled = NULL,
  consideredCandidatesAt300Mz = NULL,
  consideredCandidatesAt800Mz = NULL,
  runInTwoSteps = NULL,
  edgeFilterThresholds = NULL,
  gibbsSamplerParameters = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{enabled}}{tags whether the tool is enabled}

\item{\code{consideredCandidatesAt300Mz}}{Maximum number of candidate molecular formulas (fragmentation trees computed by SIRIUS) per compound which are considered by ZODIAC for compounds below 300 m/z.}

\item{\code{consideredCandidatesAt800Mz}}{Maximum number of candidate molecular formulas (fragmentation trees computed by SIRIUS) per compound which are considered by ZODIAC for compounds above 800 m/z.}

\item{\code{runInTwoSteps}}{As default ZODIAC runs a 2-step approach. First running 'good quality compounds' only, and afterwards including the remaining.}

\item{\code{edgeFilterThresholds}}{edgeFilterThresholds}

\item{\code{gibbsSamplerParameters}}{gibbsSamplerParameters}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Zodiac-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Zodiac-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
Convert to an R object. This method is deprecated. Use `toSimpleType()` instead.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Zodiac$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Zodiac-toList"></a>}}
\if{latex}{\out{\hypertarget{method-Zodiac-toList}{}}}
\subsection{Method \code{toList()}}{
Convert to a List

Convert the R6 object to a list to work more easily with other tooling.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Zodiac$toList()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Zodiac as a base R list.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# convert array of Zodiac (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Zodiac-toSimpleType"></a>}}
\if{latex}{\out{\hypertarget{method-Zodiac-toSimpleType}{}}}
\subsection{Method \code{toSimpleType()}}{
Convert Zodiac to a base R type
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Zodiac$toSimpleType()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A base R type, e.g. a list or numeric/character array.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Zodiac-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Zodiac-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of Zodiac
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Zodiac$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Zodiac
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Zodiac-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Zodiac-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Zodiac$toJSONString(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Parameters passed to `jsonlite::toJSON`}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Zodiac in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Zodiac-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Zodiac-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of Zodiac
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Zodiac$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Zodiac
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Zodiac-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Zodiac-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to Zodiac and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Zodiac$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Zodiac-toString"></a>}}
\if{latex}{\out{\hypertarget{method-Zodiac-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Zodiac$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of Zodiac
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Zodiac-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-Zodiac-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Zodiac$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Zodiac-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-Zodiac-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Zodiac$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Zodiac-print"></a>}}
\if{latex}{\out{\hypertarget{method-Zodiac-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Zodiac$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Zodiac-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Zodiac-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Zodiac$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
