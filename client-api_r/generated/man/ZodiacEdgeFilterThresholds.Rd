% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/zodiac_edge_filter_thresholds.R
\docType{class}
\name{ZodiacEdgeFilterThresholds}
\alias{ZodiacEdgeFilterThresholds}
\title{ZodiacEdgeFilterThresholds}
\format{
An \code{R6Class} generator object
}
\description{
ZodiacEdgeFilterThresholds Class

ZodiacEdgeFilterThresholds Class
}
\details{
Create a new ZodiacEdgeFilterThresholds
}
\examples{

## ------------------------------------------------
## Method `ZodiacEdgeFilterThresholds$toList`
## ------------------------------------------------

# convert array of ZodiacEdgeFilterThresholds (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{thresholdFilter}}{numeric [optional]}

\item{\code{minLocalCandidates}}{integer [optional]}

\item{\code{minLocalConnections}}{integer [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ZodiacEdgeFilterThresholds-new}{\code{ZodiacEdgeFilterThresholds$new()}}
\item \href{#method-ZodiacEdgeFilterThresholds-toJSON}{\code{ZodiacEdgeFilterThresholds$toJSON()}}
\item \href{#method-ZodiacEdgeFilterThresholds-toList}{\code{ZodiacEdgeFilterThresholds$toList()}}
\item \href{#method-ZodiacEdgeFilterThresholds-toSimpleType}{\code{ZodiacEdgeFilterThresholds$toSimpleType()}}
\item \href{#method-ZodiacEdgeFilterThresholds-fromJSON}{\code{ZodiacEdgeFilterThresholds$fromJSON()}}
\item \href{#method-ZodiacEdgeFilterThresholds-toJSONString}{\code{ZodiacEdgeFilterThresholds$toJSONString()}}
\item \href{#method-ZodiacEdgeFilterThresholds-fromJSONString}{\code{ZodiacEdgeFilterThresholds$fromJSONString()}}
\item \href{#method-ZodiacEdgeFilterThresholds-validateJSON}{\code{ZodiacEdgeFilterThresholds$validateJSON()}}
\item \href{#method-ZodiacEdgeFilterThresholds-toString}{\code{ZodiacEdgeFilterThresholds$toString()}}
\item \href{#method-ZodiacEdgeFilterThresholds-isValid}{\code{ZodiacEdgeFilterThresholds$isValid()}}
\item \href{#method-ZodiacEdgeFilterThresholds-getInvalidFields}{\code{ZodiacEdgeFilterThresholds$getInvalidFields()}}
\item \href{#method-ZodiacEdgeFilterThresholds-print}{\code{ZodiacEdgeFilterThresholds$print()}}
\item \href{#method-ZodiacEdgeFilterThresholds-clone}{\code{ZodiacEdgeFilterThresholds$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZodiacEdgeFilterThresholds-new"></a>}}
\if{latex}{\out{\hypertarget{method-ZodiacEdgeFilterThresholds-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new ZodiacEdgeFilterThresholds class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZodiacEdgeFilterThresholds$new(
  thresholdFilter = NULL,
  minLocalCandidates = NULL,
  minLocalConnections = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{thresholdFilter}}{thresholdFilter}

\item{\code{minLocalCandidates}}{minLocalCandidates}

\item{\code{minLocalConnections}}{minLocalConnections}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZodiacEdgeFilterThresholds-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ZodiacEdgeFilterThresholds-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
Convert to an R object. This method is deprecated. Use `toSimpleType()` instead.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZodiacEdgeFilterThresholds$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZodiacEdgeFilterThresholds-toList"></a>}}
\if{latex}{\out{\hypertarget{method-ZodiacEdgeFilterThresholds-toList}{}}}
\subsection{Method \code{toList()}}{
Convert to a List

Convert the R6 object to a list to work more easily with other tooling.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZodiacEdgeFilterThresholds$toList()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
ZodiacEdgeFilterThresholds as a base R list.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# convert array of ZodiacEdgeFilterThresholds (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZodiacEdgeFilterThresholds-toSimpleType"></a>}}
\if{latex}{\out{\hypertarget{method-ZodiacEdgeFilterThresholds-toSimpleType}{}}}
\subsection{Method \code{toSimpleType()}}{
Convert ZodiacEdgeFilterThresholds to a base R type
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZodiacEdgeFilterThresholds$toSimpleType()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A base R type, e.g. a list or numeric/character array.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZodiacEdgeFilterThresholds-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ZodiacEdgeFilterThresholds-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of ZodiacEdgeFilterThresholds
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZodiacEdgeFilterThresholds$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of ZodiacEdgeFilterThresholds
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZodiacEdgeFilterThresholds-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-ZodiacEdgeFilterThresholds-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZodiacEdgeFilterThresholds$toJSONString(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Parameters passed to `jsonlite::toJSON`}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
ZodiacEdgeFilterThresholds in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZodiacEdgeFilterThresholds-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-ZodiacEdgeFilterThresholds-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of ZodiacEdgeFilterThresholds
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZodiacEdgeFilterThresholds$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of ZodiacEdgeFilterThresholds
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZodiacEdgeFilterThresholds-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ZodiacEdgeFilterThresholds-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to ZodiacEdgeFilterThresholds and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZodiacEdgeFilterThresholds$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZodiacEdgeFilterThresholds-toString"></a>}}
\if{latex}{\out{\hypertarget{method-ZodiacEdgeFilterThresholds-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZodiacEdgeFilterThresholds$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of ZodiacEdgeFilterThresholds
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZodiacEdgeFilterThresholds-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-ZodiacEdgeFilterThresholds-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZodiacEdgeFilterThresholds$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZodiacEdgeFilterThresholds-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-ZodiacEdgeFilterThresholds-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZodiacEdgeFilterThresholds$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZodiacEdgeFilterThresholds-print"></a>}}
\if{latex}{\out{\hypertarget{method-ZodiacEdgeFilterThresholds-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZodiacEdgeFilterThresholds$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZodiacEdgeFilterThresholds-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ZodiacEdgeFilterThresholds-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZodiacEdgeFilterThresholds$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
